2024-07-19 03:52:35 [main] INFO  i.j.a.t.TicketReservationSystemApplication - Starting TicketReservationSystemApplication using Java 17.0.11 with PID 31639 (/Users/cheonjeeyeon/Documents/hanghae/ticket-reserve-system/build/classes/java/main started by cheonjeeyeon in /Users/cheonjeeyeon/Documents/hanghae/ticket-reserve-system)
2024-07-19 03:52:35 [main] INFO  i.j.a.t.TicketReservationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-19 03:52:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-19 03:52:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 294 ms. Found 7 JPA repository interfaces.
2024-07-19 03:52:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-19 03:52:38 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-19 03:52:38 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-19 03:52:38 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-19 03:52:38 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-19 03:52:38 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2473 ms
2024-07-19 03:52:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-19 03:52:38 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=SA
2024-07-19 03:52:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-19 03:52:38 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
2024-07-19 03:52:38 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-19 03:52:38 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-19 03:52:38 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-19 03:52:39 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-19 03:52:40 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760668 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    drop table if exists app_user cascade 

    drop table if exists app_user cascade ;
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760669 | took 0ms | statement | connection 2| url jdbc:h2:mem:test

    drop table if exists concert cascade 

    drop table if exists concert cascade ;
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760669 | took 0ms | statement | connection 2| url jdbc:h2:mem:test

    drop table if exists concert_schedule cascade 

    drop table if exists concert_schedule cascade ;
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760669 | took 0ms | statement | connection 2| url jdbc:h2:mem:test

    drop table if exists payment cascade 

    drop table if exists payment cascade ;
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760669 | took 0ms | statement | connection 2| url jdbc:h2:mem:test

    drop table if exists queue_token cascade 

    drop table if exists queue_token cascade ;
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760670 | took 0ms | statement | connection 2| url jdbc:h2:mem:test

    drop table if exists reservation cascade 

    drop table if exists reservation cascade ;
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760670 | took 0ms | statement | connection 2| url jdbc:h2:mem:test

    drop table if exists seat cascade 

    drop table if exists seat cascade ;
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760687 | took 11ms | statement | connection 3| url jdbc:h2:mem:test

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    )

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    );
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760688 | took 0ms | statement | connection 3| url jdbc:h2:mem:test

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    )

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    );
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760690 | took 1ms | statement | connection 3| url jdbc:h2:mem:test

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    )

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    );
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760692 | took 0ms | statement | connection 3| url jdbc:h2:mem:test

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    )

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    );
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760695 | took 1ms | statement | connection 3| url jdbc:h2:mem:test

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    )

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    );
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760696 | took 0ms | statement | connection 3| url jdbc:h2:mem:test

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    )

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    );
2024-07-19 03:52:40 [main] INFO  p6spy - #1721328760697 | took 1ms | statement | connection 3| url jdbc:h2:mem:test

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    )

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    );
2024-07-19 03:52:40 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 03:52:41 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-19 03:52:42 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-19 03:52:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-19 03:52:42 [main] INFO  i.j.a.t.TicketReservationSystemApplication - Started TicketReservationSystemApplication in 7.515 seconds (process running for 7.99)
2024-07-19 03:53:00 [scheduling-1] INFO  p6spy - #1721328780194 | took 8ms | statement | connection 4| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T03:53:00.021+0900';
2024-07-19 03:53:00 [scheduling-1] INFO  p6spy - #1721328780213 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 03:53:00 [scheduling-1] INFO  p6spy - #1721328780232 | took 0ms | statement | connection 6| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:48:00.222+0900';
2024-07-19 03:53:00 [scheduling-1] INFO  p6spy - #1721328780250 | took 0ms | statement | connection 6| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 03:53:00 [scheduling-1] INFO  p6spy - #1721328780251 | took 0ms | commit | connection 6| url jdbc:h2:mem:test

;
2024-07-19 03:53:34 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-19 03:53:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-19 03:53:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-19 03:53:35 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 567 ms
2024-07-19 03:54:00 [scheduling-1] INFO  p6spy - #1721328840010 | took 0ms | statement | connection 7| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:49:00.002+0900';
2024-07-19 03:54:00 [scheduling-1] INFO  p6spy - #1721328840013 | took 0ms | statement | connection 7| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 03:54:00 [scheduling-1] INFO  p6spy - #1721328840014 | took 0ms | commit | connection 7| url jdbc:h2:mem:test

;
2024-07-19 03:54:00 [scheduling-1] INFO  p6spy - #1721328840017 | took 0ms | statement | connection 8| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T03:54:00.014+0900';
2024-07-19 03:54:00 [scheduling-1] INFO  p6spy - #1721328840019 | took 0ms | statement | connection 9| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 03:54:28 [http-nio-8080-exec-5] INFO  API - RequestId : 8524d33e-2e54-4199-a781-a9e0a62e9a90, Request URL: http://localhost:8080/api/v1/concerts, HTTP Method: GET, IP: 0:0:0:0:0:0:0:1 Request Body: 
2024-07-19 03:54:28 [http-nio-8080-exec-5] INFO  p6spy - #1721328868307 | took 4ms | statement | connection 10| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 03:54:28 [http-nio-8080-exec-5] INFO  API - RequestId : 8524d33e-2e54-4199-a781-a9e0a62e9a90, Response Status: 200
2024-07-19 03:54:56 [Test worker] INFO  i.j.a.t.a.ConcertScheduleManagerFacadeTest - Starting ConcertScheduleManagerFacadeTest using Java 17.0.11 with PID 31834 (started by cheonjeeyeon in /Users/cheonjeeyeon/Documents/hanghae/ticket-reserve-system)
2024-07-19 03:54:56 [Test worker] INFO  i.j.a.t.a.ConcertScheduleManagerFacadeTest - No active profile set, falling back to 1 default profile: "default"
2024-07-19 03:54:57 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-19 03:54:58 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 112 ms. Found 7 JPA repository interfaces.
2024-07-19 03:54:58 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-19 03:54:58 [Test worker] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-19 03:54:58 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-19 03:54:59 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-19 03:54:59 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-19 03:54:59 [Test worker] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=SA
2024-07-19 03:54:59 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-19 03:55:00 [scheduling-1] INFO  p6spy - #1721328900007 | took 0ms | statement | connection 11| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:50:00.005+0900';
2024-07-19 03:55:00 [scheduling-1] INFO  p6spy - #1721328900009 | took 0ms | statement | connection 11| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 03:55:00 [scheduling-1] INFO  p6spy - #1721328900010 | took 0ms | commit | connection 11| url jdbc:h2:mem:test

;
2024-07-19 03:55:00 [scheduling-1] INFO  p6spy - #1721328900012 | took 0ms | statement | connection 12| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 03:55:00 [scheduling-1] INFO  p6spy - #1721328900015 | took 0ms | statement | connection 13| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T03:55:00.013+0900';
2024-07-19 03:55:00 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900670 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists app_user cascade 

    drop table if exists app_user cascade ;
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900671 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists concert cascade 

    drop table if exists concert cascade ;
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900672 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists concert_schedule cascade 

    drop table if exists concert_schedule cascade ;
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900674 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists payment cascade 

    drop table if exists payment cascade ;
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900674 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists queue_token cascade 

    drop table if exists queue_token cascade ;
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900675 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists reservation cascade 

    drop table if exists reservation cascade ;
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900676 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists seat cascade 

    drop table if exists seat cascade ;
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900699 | took 13ms | statement | connection 2| url jdbc:h2:mem:test

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    )

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    );
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900704 | took 2ms | statement | connection 2| url jdbc:h2:mem:test

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    )

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    );
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900708 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    )

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    );
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900712 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    )

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    );
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900718 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    )

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    );
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900722 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    )

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    );
2024-07-19 03:55:00 [Test worker] INFO  p6spy - #1721328900726 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    )

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    );
2024-07-19 03:55:00 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 03:55:01 [Test worker] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-19 03:55:03 [Test worker] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
2024-07-19 03:55:03 [Test worker] INFO  i.j.a.t.a.ConcertScheduleManagerFacadeTest - Started ConcertScheduleManagerFacadeTest in 6.927 seconds (process running for 9.215)
2024-07-19 03:55:03 [Test worker] INFO  p6spy - #1721328903313 | took 4ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 03:55:03 [Test worker] INFO  p6spy - #1721328903315 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 03:55:03 [Test worker] INFO  p6spy - #1721328903319 | took 3ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now());
2024-07-19 03:55:04 [Test worker] INFO  p6spy - #1721328904168 | took 16ms | statement | connection 4| url jdbc:h2:mem:test
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=?
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=1;
2024-07-19 03:55:04 [Test worker] INFO  p6spy - #1721328904324 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=1;
2024-07-19 03:55:04 [Test worker] INFO  p6spy - #1721328904355 | took 1ms | rollback | connection 4| url jdbc:h2:mem:test

;
2024-07-19 03:55:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 03:55:04 [SpringApplicationShutdownHook] INFO  p6spy - #1721328904394 | took 1ms | statement | connection 5| url jdbc:h2:mem:test

    drop table if exists app_user cascade 

    drop table if exists app_user cascade ;
2024-07-19 03:55:04 [SpringApplicationShutdownHook] INFO  p6spy - #1721328904396 | took 1ms | statement | connection 5| url jdbc:h2:mem:test

    drop table if exists concert cascade 

    drop table if exists concert cascade ;
2024-07-19 03:55:04 [SpringApplicationShutdownHook] INFO  p6spy - #1721328904397 | took 1ms | statement | connection 5| url jdbc:h2:mem:test

    drop table if exists concert_schedule cascade 

    drop table if exists concert_schedule cascade ;
2024-07-19 03:55:04 [SpringApplicationShutdownHook] INFO  p6spy - #1721328904399 | took 0ms | statement | connection 5| url jdbc:h2:mem:test

    drop table if exists payment cascade 

    drop table if exists payment cascade ;
2024-07-19 03:55:04 [SpringApplicationShutdownHook] INFO  p6spy - #1721328904399 | took 0ms | statement | connection 5| url jdbc:h2:mem:test

    drop table if exists queue_token cascade 

    drop table if exists queue_token cascade ;
2024-07-19 03:55:04 [SpringApplicationShutdownHook] INFO  p6spy - #1721328904400 | took 0ms | statement | connection 5| url jdbc:h2:mem:test

    drop table if exists reservation cascade 

    drop table if exists reservation cascade ;
2024-07-19 03:55:04 [SpringApplicationShutdownHook] INFO  p6spy - #1721328904402 | took 1ms | statement | connection 5| url jdbc:h2:mem:test

    drop table if exists seat cascade 

    drop table if exists seat cascade ;
2024-07-19 03:55:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-19 03:55:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-19 03:56:00 [scheduling-1] INFO  p6spy - #1721328960005 | took 0ms | statement | connection 14| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 03:56:00 [scheduling-1] INFO  p6spy - #1721328960007 | took 0ms | statement | connection 15| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:51:00.006+0900';
2024-07-19 03:56:00 [scheduling-1] INFO  p6spy - #1721328960009 | took 0ms | statement | connection 15| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 03:56:00 [scheduling-1] INFO  p6spy - #1721328960010 | took 0ms | commit | connection 15| url jdbc:h2:mem:test

;
2024-07-19 03:56:00 [scheduling-1] INFO  p6spy - #1721328960012 | took 0ms | statement | connection 16| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T03:56:00.010+0900';
2024-07-19 03:56:48 [Test worker] INFO  i.j.a.t.c.ConcertControllerTest - Starting ConcertControllerTest using Java 17.0.11 with PID 31982 (started by cheonjeeyeon in /Users/cheonjeeyeon/Documents/hanghae/ticket-reserve-system)
2024-07-19 03:56:48 [Test worker] INFO  i.j.a.t.c.ConcertControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-07-19 03:56:49 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-19 03:56:49 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 149 ms. Found 7 JPA repository interfaces.
2024-07-19 03:56:50 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-19 03:56:50 [Test worker] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-19 03:56:50 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-19 03:56:51 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-19 03:56:51 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-19 03:56:51 [Test worker] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=SA
2024-07-19 03:56:51 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-19 03:56:52 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012744 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists app_user cascade 

    drop table if exists app_user cascade ;
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012745 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists concert cascade 

    drop table if exists concert cascade ;
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012746 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists concert_schedule cascade 

    drop table if exists concert_schedule cascade ;
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012747 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists payment cascade 

    drop table if exists payment cascade ;
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012748 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists queue_token cascade 

    drop table if exists queue_token cascade ;
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012749 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists reservation cascade 

    drop table if exists reservation cascade ;
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012749 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists seat cascade 

    drop table if exists seat cascade ;
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012767 | took 10ms | statement | connection 2| url jdbc:h2:mem:test

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    )

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    );
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012770 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    )

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    );
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012775 | took 2ms | statement | connection 2| url jdbc:h2:mem:test

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    )

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    );
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012778 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    )

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    );
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012785 | took 2ms | statement | connection 2| url jdbc:h2:mem:test

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    )

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    );
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012789 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    )

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    );
2024-07-19 03:56:52 [Test worker] INFO  p6spy - #1721329012793 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    )

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    );
2024-07-19 03:56:52 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 03:56:53 [Test worker] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-19 03:56:54 [Test worker] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
2024-07-19 03:56:54 [Test worker] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2024-07-19 03:56:54 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2024-07-19 03:56:54 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2024-07-19 03:56:54 [Test worker] INFO  i.j.a.t.c.ConcertControllerTest - Started ConcertControllerTest in 7.13 seconds (process running for 8.717)
2024-07-19 03:56:55 [Test worker] INFO  p6spy - #1721329015003 | took 5ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 03:56:55 [Test worker] INFO  p6spy - #1721329015004 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 03:56:55 [Test worker] INFO  p6spy - #1721329015006 | took 1ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 03:56:55 [Test worker] INFO  p6spy - #1721329015010 | took 2ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 03:56:55 [Test worker] INFO  p6spy - #1721329015012 | took 1ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 03:56:55 [Test worker] INFO  API - RequestId : ffc0c36f-4be4-4483-bbcb-c99efeb91336, Request URL: http://localhost/api/v1/concerts/3/seats, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 03:56:55 [Test worker] INFO  p6spy - #1721329015879 | took 14ms | statement | connection 4| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=3 and qte1_0.token_id=5;
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016002 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=? and cse1_0.concert_date=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=3 and cse1_0.concert_date='2025-07-19T18:30:00.000+0900';
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016011 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.concert_schedule_id=? and se1_0.status=?
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.concert_schedule_id=4 and se1_0.status='AVAILABLE';
2024-07-19 03:56:56 [Test worker] INFO  API - RequestId : ffc0c36f-4be4-4483-bbcb-c99efeb91336, Response Status: 200
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016112 | took 1ms | rollback | connection 4| url jdbc:h2:mem:test

;
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016132 | took 1ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016133 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016134 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016137 | took 1ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016138 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 03:56:56 [Test worker] INFO  API - RequestId : e84832c0-b40d-4cdd-bec5-3821a65f0eb8, Request URL: http://localhost/api/v1/concerts/1/dates, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016147 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=1 and qte1_0.token_id=2;
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016171 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=?
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=1;
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016178 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=1;
2024-07-19 03:56:56 [Test worker] INFO  API - RequestId : e84832c0-b40d-4cdd-bec5-3821a65f0eb8, Response Status: 200
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016191 | took 0ms | rollback | connection 5| url jdbc:h2:mem:test

;
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016198 | took 1ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016199 | took 0ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016200 | took 0ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016203 | took 1ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016204 | took 0ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 03:56:56 [Test worker] INFO  API - RequestId : eacd7836-11b8-4594-bd20-a5a5ca8b14a3, Request URL: http://localhost/api/v1/concerts/3/seats, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016210 | took 0ms | statement | connection 6| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=3 and qte1_0.token_id=5;
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016215 | took 0ms | statement | connection 6| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=? and cse1_0.concert_date=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=3 and cse1_0.concert_date='2025-08-19T18:30:00.000+0900';
2024-07-19 03:56:56 [Test worker] INFO  API - RequestId : eacd7836-11b8-4594-bd20-a5a5ca8b14a3, Response Status: 404
2024-07-19 03:56:56 [Test worker] INFO  p6spy - #1721329016294 | took 1ms | rollback | connection 6| url jdbc:h2:mem:test

;
2024-07-19 03:56:56 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 03:56:56 [SpringApplicationShutdownHook] INFO  p6spy - #1721329016323 | took 2ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists app_user cascade 

    drop table if exists app_user cascade ;
2024-07-19 03:56:56 [SpringApplicationShutdownHook] INFO  p6spy - #1721329016325 | took 1ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists concert cascade 

    drop table if exists concert cascade ;
2024-07-19 03:56:56 [SpringApplicationShutdownHook] INFO  p6spy - #1721329016326 | took 1ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists concert_schedule cascade 

    drop table if exists concert_schedule cascade ;
2024-07-19 03:56:56 [SpringApplicationShutdownHook] INFO  p6spy - #1721329016328 | took 1ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists payment cascade 

    drop table if exists payment cascade ;
2024-07-19 03:56:56 [SpringApplicationShutdownHook] INFO  p6spy - #1721329016329 | took 0ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists queue_token cascade 

    drop table if exists queue_token cascade ;
2024-07-19 03:56:56 [SpringApplicationShutdownHook] INFO  p6spy - #1721329016330 | took 0ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists reservation cascade 

    drop table if exists reservation cascade ;
2024-07-19 03:56:56 [SpringApplicationShutdownHook] INFO  p6spy - #1721329016331 | took 0ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists seat cascade 

    drop table if exists seat cascade ;
2024-07-19 03:56:56 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-19 03:56:56 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-19 03:57:00 [scheduling-1] INFO  p6spy - #1721329020005 | took 0ms | statement | connection 17| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 03:57:00 [scheduling-1] INFO  p6spy - #1721329020008 | took 0ms | statement | connection 18| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T03:57:00.005+0900';
2024-07-19 03:57:00 [scheduling-1] INFO  p6spy - #1721329020010 | took 0ms | statement | connection 19| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:52:00.008+0900';
2024-07-19 03:57:00 [scheduling-1] INFO  p6spy - #1721329020011 | took 0ms | statement | connection 19| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 03:57:00 [scheduling-1] INFO  p6spy - #1721329020012 | took 0ms | commit | connection 19| url jdbc:h2:mem:test

;
2024-07-19 03:58:00 [scheduling-1] INFO  p6spy - #1721329080006 | took 0ms | statement | connection 20| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:53:00.004+0900';
2024-07-19 03:58:00 [scheduling-1] INFO  p6spy - #1721329080008 | took 0ms | statement | connection 20| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 03:58:00 [scheduling-1] INFO  p6spy - #1721329080009 | took 0ms | commit | connection 20| url jdbc:h2:mem:test

;
2024-07-19 03:58:00 [scheduling-1] INFO  p6spy - #1721329080014 | took 0ms | statement | connection 21| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T03:58:00.010+0900';
2024-07-19 03:58:00 [scheduling-1] INFO  p6spy - #1721329080016 | took 0ms | statement | connection 22| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 03:59:00 [scheduling-1] INFO  p6spy - #1721329140006 | took 0ms | statement | connection 23| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 03:59:00 [scheduling-1] INFO  p6spy - #1721329140009 | took 0ms | statement | connection 24| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:54:00.007+0900';
2024-07-19 03:59:00 [scheduling-1] INFO  p6spy - #1721329140011 | took 0ms | statement | connection 24| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 03:59:00 [scheduling-1] INFO  p6spy - #1721329140012 | took 0ms | commit | connection 24| url jdbc:h2:mem:test

;
2024-07-19 03:59:00 [scheduling-1] INFO  p6spy - #1721329140016 | took 0ms | statement | connection 25| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T03:59:00.012+0900';
2024-07-19 04:00:00 [scheduling-1] INFO  p6spy - #1721329200004 | took 0ms | statement | connection 26| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:00:00.000+0900';
2024-07-19 04:00:00 [scheduling-1] INFO  p6spy - #1721329200006 | took 0ms | statement | connection 27| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:55:00.005+0900';
2024-07-19 04:00:00 [scheduling-1] INFO  p6spy - #1721329200008 | took 0ms | statement | connection 27| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:00:00 [scheduling-1] INFO  p6spy - #1721329200008 | took 0ms | commit | connection 27| url jdbc:h2:mem:test

;
2024-07-19 04:00:00 [scheduling-1] INFO  p6spy - #1721329200010 | took 0ms | statement | connection 28| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:01:00 [scheduling-1] INFO  p6spy - #1721329260006 | took 0ms | statement | connection 29| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:01:00.003+0900';
2024-07-19 04:01:00 [scheduling-1] INFO  p6spy - #1721329260007 | took 0ms | statement | connection 30| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:01:00 [scheduling-1] INFO  p6spy - #1721329260010 | took 0ms | statement | connection 31| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:56:00.008+0900';
2024-07-19 04:01:00 [scheduling-1] INFO  p6spy - #1721329260011 | took 0ms | statement | connection 31| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:01:00 [scheduling-1] INFO  p6spy - #1721329260012 | took 0ms | commit | connection 31| url jdbc:h2:mem:test

;
2024-07-19 04:01:59 [scheduling-1] INFO  p6spy - #1721329319963 | took 0ms | statement | connection 32| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:01:59.960+0900';
2024-07-19 04:01:59 [scheduling-1] INFO  p6spy - #1721329319964 | took 0ms | statement | connection 33| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:01:59 [scheduling-1] INFO  p6spy - #1721329319966 | took 0ms | statement | connection 34| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:56:59.965+0900';
2024-07-19 04:01:59 [scheduling-1] INFO  p6spy - #1721329319967 | took 0ms | statement | connection 34| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:01:59 [scheduling-1] INFO  p6spy - #1721329319968 | took 0ms | commit | connection 34| url jdbc:h2:mem:test

;
2024-07-19 04:03:00 [scheduling-1] INFO  p6spy - #1721329379999 | took 0ms | statement | connection 35| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:03:00 [scheduling-1] INFO  p6spy - #1721329380003 | took 0ms | statement | connection 36| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:03:00.000+0900';
2024-07-19 04:03:00 [scheduling-1] INFO  p6spy - #1721329380006 | took 0ms | statement | connection 37| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:58:00.004+0900';
2024-07-19 04:03:00 [scheduling-1] INFO  p6spy - #1721329380008 | took 0ms | statement | connection 37| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:03:00 [scheduling-1] INFO  p6spy - #1721329380008 | took 0ms | commit | connection 37| url jdbc:h2:mem:test

;
2024-07-19 04:04:00 [scheduling-1] INFO  p6spy - #1721329440003 | took 0ms | statement | connection 38| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:04:00.001+0900';
2024-07-19 04:04:00 [scheduling-1] INFO  p6spy - #1721329440006 | took 0ms | statement | connection 39| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T03:59:00.004+0900';
2024-07-19 04:04:00 [scheduling-1] INFO  p6spy - #1721329440008 | took 0ms | statement | connection 39| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:04:00 [scheduling-1] INFO  p6spy - #1721329440008 | took 0ms | commit | connection 39| url jdbc:h2:mem:test

;
2024-07-19 04:04:00 [scheduling-1] INFO  p6spy - #1721329440010 | took 0ms | statement | connection 40| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:05:00 [scheduling-1] INFO  p6spy - #1721329500004 | took 0ms | statement | connection 41| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:05:00 [scheduling-1] INFO  p6spy - #1721329500006 | took 0ms | statement | connection 42| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:00:00.004+0900';
2024-07-19 04:05:00 [scheduling-1] INFO  p6spy - #1721329500007 | took 0ms | statement | connection 42| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:05:00 [scheduling-1] INFO  p6spy - #1721329500008 | took 0ms | commit | connection 42| url jdbc:h2:mem:test

;
2024-07-19 04:05:00 [scheduling-1] INFO  p6spy - #1721329500010 | took 0ms | statement | connection 43| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:05:00.008+0900';
2024-07-19 04:06:00 [scheduling-1] INFO  p6spy - #1721329560005 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:06:00.002+0900';
2024-07-19 04:06:00 [scheduling-1] INFO  p6spy - #1721329560008 | took 0ms | statement | connection 45| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:06:00 [scheduling-1] INFO  p6spy - #1721329560012 | took 0ms | statement | connection 46| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:01:00.009+0900';
2024-07-19 04:06:00 [scheduling-1] INFO  p6spy - #1721329560014 | took 0ms | statement | connection 46| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:06:00 [scheduling-1] INFO  p6spy - #1721329560015 | took 0ms | commit | connection 46| url jdbc:h2:mem:test

;
2024-07-19 04:07:00 [scheduling-1] INFO  p6spy - #1721329620005 | took 0ms | statement | connection 47| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:02:00.004+0900';
2024-07-19 04:07:00 [scheduling-1] INFO  p6spy - #1721329620008 | took 0ms | statement | connection 47| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:07:00 [scheduling-1] INFO  p6spy - #1721329620008 | took 0ms | commit | connection 47| url jdbc:h2:mem:test

;
2024-07-19 04:07:00 [scheduling-1] INFO  p6spy - #1721329620010 | took 0ms | statement | connection 48| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:07:00 [scheduling-1] INFO  p6spy - #1721329620013 | took 0ms | statement | connection 49| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:07:00.010+0900';
2024-07-19 04:08:00 [scheduling-1] INFO  p6spy - #1721329680012 | took 0ms | statement | connection 50| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:03:00.010+0900';
2024-07-19 04:08:00 [scheduling-1] INFO  p6spy - #1721329680017 | took 0ms | statement | connection 50| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:08:00 [scheduling-1] INFO  p6spy - #1721329680017 | took 0ms | commit | connection 50| url jdbc:h2:mem:test

;
2024-07-19 04:08:00 [scheduling-1] INFO  p6spy - #1721329680019 | took 0ms | statement | connection 51| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:08:00 [scheduling-1] INFO  p6spy - #1721329680022 | took 0ms | statement | connection 52| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:08:00.020+0900';
2024-07-19 04:09:00 [scheduling-1] INFO  p6spy - #1721329740006 | took 0ms | statement | connection 53| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:09:00 [scheduling-1] INFO  p6spy - #1721329740008 | took 0ms | statement | connection 54| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:04:00.007+0900';
2024-07-19 04:09:00 [scheduling-1] INFO  p6spy - #1721329740010 | took 0ms | statement | connection 54| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:09:00 [scheduling-1] INFO  p6spy - #1721329740010 | took 0ms | commit | connection 54| url jdbc:h2:mem:test

;
2024-07-19 04:09:00 [scheduling-1] INFO  p6spy - #1721329740014 | took 0ms | statement | connection 55| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:09:00.011+0900';
2024-07-19 04:10:00 [scheduling-1] INFO  p6spy - #1721329800004 | took 0ms | statement | connection 56| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:10:00 [scheduling-1] INFO  p6spy - #1721329800012 | took 0ms | statement | connection 57| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:10:00.007+0900';
2024-07-19 04:10:00 [scheduling-1] INFO  p6spy - #1721329800017 | took 0ms | statement | connection 58| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:05:00.013+0900';
2024-07-19 04:10:00 [scheduling-1] INFO  p6spy - #1721329800021 | took 0ms | statement | connection 58| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:10:00 [scheduling-1] INFO  p6spy - #1721329800022 | took 0ms | commit | connection 58| url jdbc:h2:mem:test

;
2024-07-19 04:11:00 [scheduling-1] INFO  p6spy - #1721329860006 | took 0ms | statement | connection 59| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:11:00.004+0900';
2024-07-19 04:11:00 [scheduling-1] INFO  p6spy - #1721329860015 | took 0ms | statement | connection 60| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:06:00.013+0900';
2024-07-19 04:11:00 [scheduling-1] INFO  p6spy - #1721329860017 | took 0ms | statement | connection 60| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:11:00 [scheduling-1] INFO  p6spy - #1721329860018 | took 0ms | commit | connection 60| url jdbc:h2:mem:test

;
2024-07-19 04:11:00 [scheduling-1] INFO  p6spy - #1721329860020 | took 0ms | statement | connection 61| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:12:00 [scheduling-1] INFO  p6spy - #1721329920006 | took 0ms | statement | connection 62| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:12:00 [scheduling-1] INFO  p6spy - #1721329920011 | took 0ms | statement | connection 63| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:12:00.008+0900';
2024-07-19 04:12:00 [scheduling-1] INFO  p6spy - #1721329920015 | took 0ms | statement | connection 64| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:07:00.012+0900';
2024-07-19 04:12:00 [scheduling-1] INFO  p6spy - #1721329920018 | took 0ms | statement | connection 64| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:12:00 [scheduling-1] INFO  p6spy - #1721329920018 | took 0ms | commit | connection 64| url jdbc:h2:mem:test

;
2024-07-19 04:13:00 [scheduling-1] INFO  p6spy - #1721329980005 | took 0ms | statement | connection 65| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:13:00 [scheduling-1] INFO  p6spy - #1721329980015 | took 0ms | statement | connection 66| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:13:00.012+0900';
2024-07-19 04:13:00 [scheduling-1] INFO  p6spy - #1721329980017 | took 0ms | statement | connection 67| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:08:00.016+0900';
2024-07-19 04:13:00 [scheduling-1] INFO  p6spy - #1721329980018 | took 0ms | statement | connection 67| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:13:00 [scheduling-1] INFO  p6spy - #1721329980019 | took 0ms | commit | connection 67| url jdbc:h2:mem:test

;
2024-07-19 04:14:00 [scheduling-1] INFO  p6spy - #1721330040005 | took 0ms | statement | connection 68| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:14:00.002+0900';
2024-07-19 04:14:00 [scheduling-1] INFO  p6spy - #1721330040009 | took 0ms | statement | connection 69| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:09:00.007+0900';
2024-07-19 04:14:00 [scheduling-1] INFO  p6spy - #1721330040011 | took 0ms | statement | connection 69| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:14:00 [scheduling-1] INFO  p6spy - #1721330040011 | took 0ms | commit | connection 69| url jdbc:h2:mem:test

;
2024-07-19 04:14:00 [scheduling-1] INFO  p6spy - #1721330040013 | took 0ms | statement | connection 70| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:14:16 [Test worker] INFO  i.j.a.t.TicketReservationSystemApplicationTests - Starting TicketReservationSystemApplicationTests using Java 17.0.11 with PID 33602 (started by cheonjeeyeon in /Users/cheonjeeyeon/Documents/hanghae/ticket-reserve-system)
2024-07-19 04:14:16 [Test worker] INFO  i.j.a.t.TicketReservationSystemApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-07-19 04:14:17 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-19 04:14:18 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 156 ms. Found 7 JPA repository interfaces.
2024-07-19 04:14:18 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-19 04:14:18 [Test worker] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-19 04:14:18 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-19 04:14:19 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-19 04:14:19 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-19 04:14:19 [Test worker] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=SA
2024-07-19 04:14:19 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-19 04:14:21 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061638 | took 3ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists app_user cascade 

    drop table if exists app_user cascade ;
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061642 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists concert cascade 

    drop table if exists concert cascade ;
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061645 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists concert_schedule cascade 

    drop table if exists concert_schedule cascade ;
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061647 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists payment cascade 

    drop table if exists payment cascade ;
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061648 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists queue_token cascade 

    drop table if exists queue_token cascade ;
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061650 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists reservation cascade 

    drop table if exists reservation cascade ;
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061654 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists seat cascade 

    drop table if exists seat cascade ;
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061675 | took 12ms | statement | connection 2| url jdbc:h2:mem:test

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    )

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    );
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061682 | took 2ms | statement | connection 2| url jdbc:h2:mem:test

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    )

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    );
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061687 | took 2ms | statement | connection 2| url jdbc:h2:mem:test

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    )

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    );
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061692 | took 3ms | statement | connection 2| url jdbc:h2:mem:test

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    )

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    );
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061703 | took 4ms | statement | connection 2| url jdbc:h2:mem:test

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    )

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    );
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061711 | took 4ms | statement | connection 2| url jdbc:h2:mem:test

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    )

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    );
2024-07-19 04:14:21 [Test worker] INFO  p6spy - #1721330061718 | took 2ms | statement | connection 2| url jdbc:h2:mem:test

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    )

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    );
2024-07-19 04:14:21 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 04:14:22 [Test worker] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-19 04:14:24 [Test worker] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
2024-07-19 04:14:24 [Test worker] INFO  i.j.a.t.TicketReservationSystemApplicationTests - Started TicketReservationSystemApplicationTests in 9.053 seconds (process running for 10.899)
2024-07-19 04:14:25 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.application.ConcertScheduleManagerFacadeTest]: ConcertScheduleManagerFacadeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:25 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.application.ConcertScheduleManagerFacadeTest
2024-07-19 04:14:25 [Test worker] INFO  p6spy - #1721330065774 | took 6ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:25 [Test worker] INFO  p6spy - #1721330065776 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:25 [Test worker] INFO  p6spy - #1721330065779 | took 2ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now());
2024-07-19 04:14:25 [Test worker] INFO  p6spy - #1721330065889 | took 15ms | statement | connection 4| url jdbc:h2:mem:test
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=?
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066026 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066046 | took 1ms | rollback | connection 4| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066057 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066058 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066060 | took 1ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now());
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066069 | took 0ms | rollback | connection 5| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066077 | took 0ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066083 | took 1ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066088 | took 3ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now());
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066105 | took 0ms | statement | connection 6| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=? and cse1_0.concert_date=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=1 and cse1_0.concert_date='2024-07-15T01:00:00.000+0900';
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066112 | took 0ms | rollback | connection 6| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.application.PaymentFacadeTest]: PaymentFacadeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:26 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.application.PaymentFacadeTest
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066133 | took 1ms | statement | connection 7| url jdbc:h2:mem:test
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now())
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now());
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066135 | took 0ms | commit | connection 7| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066151 | took 0ms | statement | connection 8| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066176 | took 2ms | statement | connection 8| url jdbc:h2:mem:test
insert into reservation (created_at,seat_id,status,token_id,updated_at,reservation_id) values (?,?,?,?,?,default)
insert into reservation (created_at,seat_id,status,token_id,updated_at,reservation_id) values (NULL,1,'RESERVED',1,NULL,default);
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066197 | took 0ms | commit | connection 8| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066202 | took 0ms | statement | connection 9| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.token_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066205 | took 0ms | statement | connection 9| url jdbc:h2:mem:test
insert into queue_token (activated_at,concert_id,created_at,expired_at,sequence_id,status,updated_at,user_id,token_id) values (?,?,?,?,?,?,?,?,default)
insert into queue_token (activated_at,concert_id,created_at,expired_at,sequence_id,status,updated_at,user_id,token_id) values (NULL,1,NULL,NULL,NULL,NULL,NULL,1,default);
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066207 | took 0ms | commit | connection 9| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066211 | took 0ms | statement | connection 10| url jdbc:h2:mem:test
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=?
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066213 | took 0ms | statement | connection 10| url jdbc:h2:mem:test
insert into seat (concert_schedule_id,created_at,seat_number,status,ticket_price,updated_at,seat_id) values (?,?,?,?,?,?,default)
insert into seat (concert_schedule_id,created_at,seat_number,status,ticket_price,updated_at,seat_id) values (NULL,NULL,'G01','RESERVED',500,NULL,default);
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066215 | took 0ms | commit | connection 10| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066218 | took 0ms | statement | connection 11| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066219 | took 0ms | commit | connection 11| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066224 | took 0ms | statement | connection 12| url jdbc:h2:mem:test
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=?
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066225 | took 0ms | commit | connection 12| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066234 | took 0ms | statement | connection 13| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066236 | took 0ms | commit | connection 13| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066245 | took 2ms | statement | connection 14| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066270 | took 0ms | statement | connection 14| url jdbc:h2:mem:test
update app_user set balance=?,created_at=?,updated_at=? where user_id=?
update app_user set balance=500,created_at=NULL,updated_at=NULL where user_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066274 | took 0ms | commit | connection 14| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066277 | took 0ms | statement | connection 15| url jdbc:h2:mem:test
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=?
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066281 | took 0ms | statement | connection 15| url jdbc:h2:mem:test
update seat set concert_schedule_id=?,created_at=?,seat_number=?,status=?,ticket_price=?,updated_at=? where seat_id=?
update seat set concert_schedule_id=NULL,created_at=NULL,seat_number='G01',status='PAID',ticket_price=500,updated_at=NULL where seat_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066282 | took 0ms | commit | connection 15| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066285 | took 0ms | statement | connection 16| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066289 | took 0ms | statement | connection 16| url jdbc:h2:mem:test
update reservation set created_at=?,seat_id=?,status=?,token_id=?,updated_at=? where reservation_id=?
update reservation set created_at=NULL,seat_id=1,status='CONFIRMED',token_id=1,updated_at=NULL where reservation_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066290 | took 0ms | commit | connection 16| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066293 | took 0ms | statement | connection 17| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.token_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066295 | took 0ms | commit | connection 17| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066299 | took 0ms | statement | connection 18| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.token_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066302 | took 0ms | statement | connection 18| url jdbc:h2:mem:test
update queue_token set activated_at=?,concert_id=?,created_at=?,expired_at=?,sequence_id=?,status=?,updated_at=?,user_id=? where token_id=?
update queue_token set activated_at=NULL,concert_id=1,created_at=NULL,expired_at=NULL,sequence_id=NULL,status='EXPIRED',updated_at=NULL,user_id=1 where token_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066303 | took 0ms | commit | connection 18| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066308 | took 0ms | statement | connection 19| url jdbc:h2:mem:test
insert into payment (amount,created_at,reservation_id,updated_at,payment_id) values (?,?,?,?,default)
insert into payment (amount,created_at,reservation_id,updated_at,payment_id) values (500,NULL,1,NULL,default);
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066311 | took 1ms | commit | connection 19| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066314 | took 0ms | statement | connection 20| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066315 | took 0ms | commit | connection 20| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066317 | took 0ms | statement | connection 21| url jdbc:h2:mem:test
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=?
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066319 | took 0ms | commit | connection 21| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066322 | took 0ms | statement | connection 22| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066324 | took 0ms | commit | connection 22| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.application.ReservationManagerFacadeTest]: ReservationManagerFacadeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:26 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.application.ReservationManagerFacadeTest
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066347 | took 1ms | statement | connection 23| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066357 | took 0ms | rollback | connection 23| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066376 | took 2ms | statement | connection 24| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066382 | took 0ms | rollback | connection 24| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066394 | took 1ms | statement | connection 25| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066403 | took 0ms | rollback | connection 25| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.application.TokenManagerFacadeTest]: TokenManagerFacadeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:26 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.application.TokenManagerFacadeTest
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066495 | took 0ms | statement | connection 26| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066535 | took 1ms | statement | connection 27| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=999;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066536 | took 0ms | commit | connection 27| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066585 | took 0ms | statement | connection 28| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066586 | took 0ms | commit | connection 28| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066597 | took 0ms | statement | connection 29| url jdbc:h2:mem:test
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=?
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=1;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066599 | took 0ms | commit | connection 29| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066621 | took 0ms | statement | connection 30| url jdbc:h2:mem:test
insert into queue_token (activated_at,concert_id,created_at,expired_at,sequence_id,status,updated_at,user_id,token_id) values (?,?,?,?,?,?,?,?,default)
insert into queue_token (activated_at,concert_id,created_at,expired_at,sequence_id,status,updated_at,user_id,token_id) values (NULL,1,NULL,'2024-07-20T04:14:26.618+0900',3,'WAITING',NULL,2,default);
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066623 | took 0ms | commit | connection 30| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066626 | took 0ms | statement | connection 31| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.token_id=2;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066627 | took 0ms | commit | connection 31| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066644 | took 5ms | statement | connection 32| url jdbc:h2:mem:test
select count(qte1_0.token_id) from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.sequence_id<? and qte1_0.status=?
select count(qte1_0.token_id) from queue_token qte1_0 where qte1_0.concert_id=1 and qte1_0.sequence_id<3 and qte1_0.status='WAITING';
2024-07-19 04:14:26 [Test worker] INFO  i.j.a.t.d.q.QueueTokenService - 대기 번호 조회 : 0
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066662 | took 0ms | statement | connection 33| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:14:26.657+0900';
2024-07-19 04:14:26 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.application.UserManagerFacadeTest]: UserManagerFacadeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:26 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.application.UserManagerFacadeTest
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066696 | took 0ms | statement | connection 34| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066705 | took 0ms | rollback | connection 34| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066714 | took 0ms | statement | connection 35| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:26 [Test worker] INFO  p6spy - #1721330066722 | took 0ms | rollback | connection 35| url jdbc:h2:mem:test

;
2024-07-19 04:14:26 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.controller.ConcertControllerTest]: ConcertControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:26 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.controller.ConcertControllerTest
2024-07-19 04:14:26 [Test worker] INFO  i.j.a.t.c.ConcertControllerTest - Starting ConcertControllerTest using Java 17.0.11 with PID 33602 (started by cheonjeeyeon in /Users/cheonjeeyeon/Documents/hanghae/ticket-reserve-system)
2024-07-19 04:14:26 [Test worker] INFO  i.j.a.t.c.ConcertControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-07-19 04:14:27 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-19 04:14:27 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 7 JPA repository interfaces.
2024-07-19 04:14:27 [Test worker] INFO  c.g.g.b.j.d.p6spy.P6SpyConfiguration - P6Spy modulelist is overridden, some p6spy configuration features will not be applied
2024-07-19 04:14:27 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-19 04:14:27 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-19 04:14:27 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-19 04:14:27 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2024-07-19 04:14:27 [Test worker] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:test user=SA
2024-07-19 04:14:27 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2024-07-19 04:14:28 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068005 | took 1ms | statement | connection 37| url jdbc:h2:mem:test

    drop table if exists app_user cascade 

    drop table if exists app_user cascade ;
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068006 | took 0ms | statement | connection 37| url jdbc:h2:mem:test

    drop table if exists concert cascade 

    drop table if exists concert cascade ;
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068007 | took 1ms | statement | connection 37| url jdbc:h2:mem:test

    drop table if exists concert_schedule cascade 

    drop table if exists concert_schedule cascade ;
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068009 | took 1ms | statement | connection 37| url jdbc:h2:mem:test

    drop table if exists payment cascade 

    drop table if exists payment cascade ;
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068011 | took 1ms | statement | connection 37| url jdbc:h2:mem:test

    drop table if exists queue_token cascade 

    drop table if exists queue_token cascade ;
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068013 | took 0ms | statement | connection 37| url jdbc:h2:mem:test

    drop table if exists reservation cascade 

    drop table if exists reservation cascade ;
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068014 | took 0ms | statement | connection 37| url jdbc:h2:mem:test

    drop table if exists seat cascade 

    drop table if exists seat cascade ;
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068018 | took 1ms | statement | connection 38| url jdbc:h2:mem:test

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    )

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    );
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068022 | took 1ms | statement | connection 38| url jdbc:h2:mem:test

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    )

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    );
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068026 | took 1ms | statement | connection 38| url jdbc:h2:mem:test

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    )

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    );
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068029 | took 1ms | statement | connection 38| url jdbc:h2:mem:test

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    )

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    );
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068033 | took 1ms | statement | connection 38| url jdbc:h2:mem:test

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    )

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    );
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068037 | took 2ms | statement | connection 38| url jdbc:h2:mem:test

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    )

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    );
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068039 | took 1ms | statement | connection 38| url jdbc:h2:mem:test

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    )

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    );
2024-07-19 04:14:28 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 04:14:28 [Test worker] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
2024-07-19 04:14:28 [Test worker] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2024-07-19 04:14:28 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2024-07-19 04:14:28 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2024-07-19 04:14:28 [Test worker] INFO  i.j.a.t.c.ConcertControllerTest - Started ConcertControllerTest in 1.962 seconds (process running for 14.755)
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068760 | took 0ms | statement | connection 40| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068761 | took 0ms | statement | connection 40| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068762 | took 0ms | statement | connection 40| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068763 | took 1ms | statement | connection 40| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068764 | took 0ms | statement | connection 40| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 04:14:28 [Test worker] INFO  API - RequestId : 6a4af78b-0338-49c0-bd28-26704dc6c217, Request URL: http://localhost/api/v1/concerts/3/seats, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068823 | took 0ms | statement | connection 40| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=3 and qte1_0.token_id=5;
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068882 | took 0ms | statement | connection 40| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=? and cse1_0.concert_date=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=3 and cse1_0.concert_date='2025-07-19T18:30:00.000+0900';
2024-07-19 04:14:28 [Test worker] INFO  p6spy - #1721330068889 | took 0ms | statement | connection 40| url jdbc:h2:mem:test
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.concert_schedule_id=? and se1_0.status=?
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.concert_schedule_id=4 and se1_0.status='AVAILABLE';
2024-07-19 04:14:28 [Test worker] INFO  API - RequestId : 6a4af78b-0338-49c0-bd28-26704dc6c217, Response Status: 200
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069000 | took 0ms | rollback | connection 40| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069005 | took 0ms | statement | connection 41| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069006 | took 0ms | statement | connection 41| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069007 | took 0ms | statement | connection 41| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069009 | took 1ms | statement | connection 41| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069010 | took 0ms | statement | connection 41| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 9846cc0e-66fd-4104-9446-c0d3a55ec577, Request URL: http://localhost/api/v1/concerts/1/dates, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069017 | took 0ms | statement | connection 41| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=1 and qte1_0.token_id=2;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069022 | took 0ms | statement | connection 41| url jdbc:h2:mem:test
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=?
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=1;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069027 | took 0ms | statement | connection 41| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=1;
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 9846cc0e-66fd-4104-9446-c0d3a55ec577, Response Status: 200
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069037 | took 0ms | rollback | connection 41| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069044 | took 0ms | statement | connection 42| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069045 | took 0ms | statement | connection 42| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069046 | took 0ms | statement | connection 42| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069048 | took 1ms | statement | connection 42| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069049 | took 0ms | statement | connection 42| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : fb071c46-b333-44f0-b651-d2a670fb3404, Request URL: http://localhost/api/v1/concerts/3/seats, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069056 | took 0ms | statement | connection 42| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=3 and qte1_0.token_id=5;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069062 | took 0ms | statement | connection 42| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=? and cse1_0.concert_date=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=3 and cse1_0.concert_date='2025-08-19T18:30:00.000+0900';
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : fb071c46-b333-44f0-b651-d2a670fb3404, Response Status: 404
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069169 | took 0ms | rollback | connection 42| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.controller.PaymentControllerTest]: PaymentControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:29 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.controller.PaymentControllerTest
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069205 | took 2ms | statement | connection 43| url jdbc:h2:mem:test
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now())
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now());
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069209 | took 1ms | statement | connection 43| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069210 | took 0ms | statement | connection 43| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069212 | took 0ms | statement | connection 43| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069214 | took 1ms | statement | connection 43| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069214 | took 0ms | statement | connection 43| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : eaeda5b5-723c-4f3e-b65d-0c5bb370ad03, Request URL: http://localhost/api/v1/concerts/3/payment, HTTP Method: POST, IP: 127.0.0.1 Request Body: { "reservationId": 2, "userId": 4 }
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069223 | took 0ms | statement | connection 43| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=3 and qte1_0.token_id=5;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069284 | took 0ms | statement | connection 43| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=2;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069287 | took 0ms | statement | connection 43| url jdbc:h2:mem:test
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=?
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=5;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069291 | took 0ms | statement | connection 43| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=4;
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : eaeda5b5-723c-4f3e-b65d-0c5bb370ad03, Response Status: 403
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069301 | took 0ms | rollback | connection 43| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069306 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now())
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now());
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069315 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069315 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069316 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069317 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069318 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 1a9ea7e8-8630-4bed-8880-71bfe7b4480f, Request URL: http://localhost/api/v1/concerts/3/payment, HTTP Method: POST, IP: 127.0.0.1 Request Body: { "reservationId": 1, "userId": 6 }
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069324 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=3 and qte1_0.token_id=5;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069328 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 where re1_0.reservation_id=1;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069330 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=?
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.seat_id=3;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069333 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=6;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069339 | took 0ms | statement | connection 44| url jdbc:h2:mem:test
insert into payment (amount,created_at,reservation_id,updated_at,payment_id) values (?,?,?,?,default)
insert into payment (amount,created_at,reservation_id,updated_at,payment_id) values (5000,NULL,1,NULL,default);
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 1a9ea7e8-8630-4bed-8880-71bfe7b4480f, Response Status: 200
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069348 | took 0ms | rollback | connection 44| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.controller.QueueTokenControllerTest]: QueueTokenControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:29 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.controller.QueueTokenControllerTest
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069361 | took 0ms | statement | connection 45| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069361 | took 0ms | statement | connection 45| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069362 | took 0ms | statement | connection 45| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069363 | took 0ms | statement | connection 45| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069364 | took 0ms | statement | connection 45| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : f505fac0-3efa-4842-b1c5-8c6bc5d858ae, Request URL: http://localhost/api/v1/token, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069370 | took 0ms | statement | connection 45| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.token_id=3;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069375 | took 0ms | statement | connection 45| url jdbc:h2:mem:test
select count(qte1_0.token_id) from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.sequence_id<? and qte1_0.status=?
select count(qte1_0.token_id) from queue_token qte1_0 where qte1_0.concert_id=2 and qte1_0.sequence_id<NULL and qte1_0.status='WAITING';
2024-07-19 04:14:29 [Test worker] INFO  i.j.a.t.d.q.QueueTokenService - 대기 번호 조회 : 0
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : f505fac0-3efa-4842-b1c5-8c6bc5d858ae, Response Status: 200
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069386 | took 0ms | rollback | connection 45| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069391 | took 0ms | statement | connection 46| url jdbc:h2:mem:test
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now())
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now());
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069392 | took 0ms | statement | connection 46| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069393 | took 0ms | statement | connection 46| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069394 | took 0ms | statement | connection 46| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now());
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 64b1199a-0999-4319-b934-fc6252350ee7, Request URL: http://localhost/api/v1/concerts/3/token, HTTP Method: POST, IP: 127.0.0.1 Request Body: 
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069399 | took 0ms | statement | connection 46| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=7;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069400 | took 0ms | statement | connection 46| url jdbc:h2:mem:test
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=?
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=3;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069435 | took 0ms | statement | connection 46| url jdbc:h2:mem:test
SELECT COALESCE(MAX(SEQUENCE_ID), 0) + 1 FROM QUEUE_TOKEN WHERE CONCERT_ID = ?
SELECT COALESCE(MAX(SEQUENCE_ID), 0) + 1 FROM QUEUE_TOKEN WHERE CONCERT_ID = 3;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069442 | took 0ms | statement | connection 46| url jdbc:h2:mem:test
insert into queue_token (activated_at,concert_id,created_at,expired_at,sequence_id,status,updated_at,user_id,token_id) values (?,?,?,?,?,?,?,?,default)
insert into queue_token (activated_at,concert_id,created_at,expired_at,sequence_id,status,updated_at,user_id,token_id) values (NULL,3,NULL,'2024-07-20T04:14:29.439+0900',1,'WAITING',NULL,7,default);
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 64b1199a-0999-4319-b934-fc6252350ee7, Response Status: 200
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069447 | took 0ms | rollback | connection 46| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069453 | took 1ms | statement | connection 47| url jdbc:h2:mem:test
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now())
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now());
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069454 | took 0ms | statement | connection 47| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069454 | took 0ms | statement | connection 47| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069455 | took 0ms | statement | connection 47| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now());
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : de9b8005-3d5c-412e-a3d2-ba6e5e2a0906, Request URL: http://localhost/api/v1/concerts/3/token, HTTP Method: POST, IP: 127.0.0.1 Request Body: 
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069460 | took 0ms | statement | connection 47| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=27;
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : de9b8005-3d5c-412e-a3d2-ba6e5e2a0906, Response Status: 404
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069467 | took 0ms | rollback | connection 47| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.controller.ReservationControllerTest]: ReservationControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:29 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.controller.ReservationControllerTest
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069481 | took 0ms | statement | connection 48| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069481 | took 0ms | statement | connection 48| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069483 | took 0ms | statement | connection 48| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now());
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069484 | took 0ms | statement | connection 48| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00');
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 8581f6ab-9f07-4443-8557-d8e4d25887c8, Request URL: http://localhost/api/v1/concerts/1/reservation, HTTP Method: POST, IP: 127.0.0.1 Request Body: { "userId": 2, "date": "2025-07-15 19:00:00","seatNumber": "C02"  }
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069490 | took 0ms | statement | connection 48| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=1 and qte1_0.token_id=2;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069499 | took 0ms | statement | connection 48| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=? and cse1_0.concert_date=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=1 and cse1_0.concert_date='2025-07-15T19:00:00.000+0900';
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069504 | took 0ms | statement | connection 48| url jdbc:h2:mem:test
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.concert_schedule_id=? and se1_0.seat_number=?
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.concert_schedule_id=1 and se1_0.seat_number='C02';
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 8581f6ab-9f07-4443-8557-d8e4d25887c8, Response Status: 409
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069513 | took 0ms | rollback | connection 48| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069519 | took 0ms | statement | connection 49| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069520 | took 0ms | statement | connection 49| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069521 | took 1ms | statement | connection 49| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'PAID',now(),now());
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069523 | took 0ms | statement | connection 49| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00');
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : f816ec07-d149-4008-88b8-5e63ba30950f, Request URL: http://localhost/api/v1/concerts/1/reservation, HTTP Method: POST, IP: 127.0.0.1 Request Body: { "userId": 2, "date": "2025-07-15 19:00:00","seatNumber": "C01"  }
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069529 | took 0ms | statement | connection 49| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=1 and qte1_0.token_id=2;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069535 | took 0ms | statement | connection 49| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=? and cse1_0.concert_date=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=1 and cse1_0.concert_date='2025-07-15T19:00:00.000+0900';
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069540 | took 0ms | statement | connection 49| url jdbc:h2:mem:test
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.concert_schedule_id=? and se1_0.seat_number=?
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.concert_schedule_id=1 and se1_0.seat_number='C01';
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069543 | took 0ms | statement | connection 49| url jdbc:h2:mem:test
insert into reservation (created_at,seat_id,status,token_id,updated_at,reservation_id) values (?,?,?,?,?,default)
insert into reservation (created_at,seat_id,status,token_id,updated_at,reservation_id) values (NULL,9,'RESERVED',2,NULL,default);
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : f816ec07-d149-4008-88b8-5e63ba30950f, Response Status: 200
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069550 | took 0ms | rollback | connection 49| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.controller.UserControllerTest]: UserControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:29 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.controller.UserControllerTest
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069564 | took 0ms | statement | connection 50| url jdbc:h2:mem:test
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now())
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now());
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 8cf93e3f-ec37-4155-9d9f-fa09ee7d0acc, Request URL: http://localhost/api/v1/users/10/balance, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069571 | took 0ms | statement | connection 50| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=10;
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 8cf93e3f-ec37-4155-9d9f-fa09ee7d0acc, Response Status: 404
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069582 | took 0ms | rollback | connection 50| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069588 | took 0ms | statement | connection 51| url jdbc:h2:mem:test
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now())
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now());
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : bff77dc2-18c8-4427-9428-1aeb248f9641, Request URL: http://localhost/api/v1/users/13412/charge, HTTP Method: PATCH, IP: 127.0.0.1 Request Body: { "amount": 413000 }
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069601 | took 0ms | statement | connection 51| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=13412;
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : bff77dc2-18c8-4427-9428-1aeb248f9641, Response Status: 404
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069614 | took 0ms | rollback | connection 51| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069620 | took 0ms | statement | connection 52| url jdbc:h2:mem:test
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now())
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now());
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 6855ebcc-be2b-49a1-9b32-2b80947b6822, Request URL: http://localhost/api/v1/users/1/balance, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069628 | took 0ms | statement | connection 52| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=1;
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 6855ebcc-be2b-49a1-9b32-2b80947b6822, Response Status: 200
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069638 | took 0ms | rollback | connection 52| url jdbc:h2:mem:test

;
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069646 | took 0ms | statement | connection 53| url jdbc:h2:mem:test
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now())
INSERT INTO APP_USER (user_id, balance, created_at, updated_at) VALUES (1, 1000, now(),now()), (2, 2000, now(),now()), (3, 3000, now(),now()), (4, 4000, now(),now()), (5, 5000, now(),now()), (6, 6000, now(),now()), (7, 7000, now(),now());
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 80f16c90-663a-43f4-a7f2-c9d89a443121, Request URL: http://localhost/api/v1/users/1/charge, HTTP Method: PATCH, IP: 127.0.0.1 Request Body: { "amount": 413000 }
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069651 | took 0ms | statement | connection 53| url jdbc:h2:mem:test
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=?
select ue1_0.user_id,ue1_0.balance,ue1_0.created_at,ue1_0.updated_at from app_user ue1_0 where ue1_0.user_id=1;
2024-07-19 04:14:29 [Test worker] INFO  API - RequestId : 80f16c90-663a-43f4-a7f2-c9d89a443121, Response Status: 200
2024-07-19 04:14:29 [Test worker] INFO  p6spy - #1721330069658 | took 0ms | rollback | connection 53| url jdbc:h2:mem:test

;
2024-07-19 04:14:30 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.infra.PaymentJpaRepositoryTest]: PaymentJpaRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:30 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.infra.PaymentJpaRepositoryTest
2024-07-19 04:14:30 [Test worker] INFO  i.j.a.t.i.PaymentJpaRepositoryTest - Starting PaymentJpaRepositoryTest using Java 17.0.11 with PID 33602 (started by cheonjeeyeon in /Users/cheonjeeyeon/Documents/hanghae/ticket-reserve-system)
2024-07-19 04:14:30 [Test worker] INFO  i.j.a.t.i.PaymentJpaRepositoryTest - No active profile set, falling back to 1 default profile: "default"
2024-07-19 04:14:31 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-19 04:14:31 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 130 ms. Found 7 JPA repository interfaces.
2024-07-19 04:14:31 [Test worker] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2024-07-19 04:14:31 [Test worker] INFO  o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2024-07-19 04:14:31 [Test worker] INFO  c.g.g.b.j.d.p6spy.P6SpyConfiguration - P6Spy modulelist is overridden, some p6spy configuration features will not be applied
2024-07-19 04:14:31 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-19 04:14:31 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-19 04:14:31 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-19 04:14:32 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072110 | took 0ms | statement | connection 55| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    drop table if exists app_user cascade 

    drop table if exists app_user cascade ;
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072114 | took 0ms | statement | connection 55| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    drop table if exists concert cascade 

    drop table if exists concert cascade ;
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072115 | took 0ms | statement | connection 55| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    drop table if exists concert_schedule cascade 

    drop table if exists concert_schedule cascade ;
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072116 | took 0ms | statement | connection 55| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    drop table if exists payment cascade 

    drop table if exists payment cascade ;
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072118 | took 0ms | statement | connection 55| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    drop table if exists queue_token cascade 

    drop table if exists queue_token cascade ;
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072122 | took 0ms | statement | connection 55| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    drop table if exists reservation cascade 

    drop table if exists reservation cascade ;
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072124 | took 0ms | statement | connection 55| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    drop table if exists seat cascade 

    drop table if exists seat cascade ;
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072129 | took 2ms | statement | connection 56| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    )

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    );
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072132 | took 1ms | statement | connection 56| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    )

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    );
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072136 | took 1ms | statement | connection 56| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    )

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    );
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072139 | took 1ms | statement | connection 56| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    )

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    );
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072183 | took 6ms | statement | connection 56| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    )

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    );
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072191 | took 2ms | statement | connection 56| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    )

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    );
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072197 | took 3ms | statement | connection 56| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    )

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    );
2024-07-19 04:14:32 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 04:14:32 [Test worker] INFO  i.j.a.t.i.PaymentJpaRepositoryTest - Started PaymentJpaRepositoryTest in 1.738 seconds (process running for 18.522)
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072534 | took 0ms | statement | connection 57| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7
select pe1_0.payment_id,pe1_0.amount,pe1_0.created_at,pe1_0.reservation_id,pe1_0.updated_at from payment pe1_0 where pe1_0.payment_id=?
select pe1_0.payment_id,pe1_0.amount,pe1_0.created_at,pe1_0.reservation_id,pe1_0.updated_at from payment pe1_0 where pe1_0.payment_id=1;
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072541 | took 1ms | statement | connection 57| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7
insert into payment (amount,created_at,reservation_id,updated_at,payment_id) values (?,?,?,?,default)
insert into payment (amount,created_at,reservation_id,updated_at,payment_id) values (10000,NULL,2,NULL,default);
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072558 | took 0ms | rollback | connection 57| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

;
2024-07-19 04:14:32 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.jeeyeon.app.ticketReserve.infra.queueToken.QueueTokenJpaRepositoryTest]: QueueTokenJpaRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-19 04:14:32 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.jeeyeon.app.ticketReserve.TicketReservationSystemApplication for test class io.jeeyeon.app.ticketReserve.infra.queueToken.QueueTokenJpaRepositoryTest
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072649 | took 1ms | statement | connection 58| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072650 | took 0ms | statement | connection 58| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072653 | took 1ms | statement | connection 58| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072655 | took 1ms | statement | connection 58| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072656 | took 0ms | statement | connection 58| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 04:14:32 [Test worker] INFO  p6spy - #1721330072663 | took 0ms | statement | connection 58| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.status=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=1 and qte1_0.status='ACTIVE';
2024-07-19 04:14:33 [Test worker] INFO  p6spy - #1721330073072 | took 1ms | rollback | connection 58| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

;
2024-07-19 04:14:33 [Test worker] INFO  p6spy - #1721330073103 | took 0ms | statement | connection 59| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.status=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=999 and qte1_0.status='ACTIVE';
2024-07-19 04:14:33 [Test worker] INFO  p6spy - #1721330073111 | took 0ms | rollback | connection 59| url jdbc:h2:mem:5bc2338d-2dd7-4bbb-9426-443c43d48ec7

;
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  p6spy - #1721330073147 | took 1ms | statement | connection 60| url jdbc:h2:mem:test

    drop table if exists app_user cascade 

    drop table if exists app_user cascade ;
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  p6spy - #1721330073149 | took 1ms | statement | connection 60| url jdbc:h2:mem:test

    drop table if exists concert cascade 

    drop table if exists concert cascade ;
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  p6spy - #1721330073151 | took 1ms | statement | connection 60| url jdbc:h2:mem:test

    drop table if exists concert_schedule cascade 

    drop table if exists concert_schedule cascade ;
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  p6spy - #1721330073153 | took 1ms | statement | connection 60| url jdbc:h2:mem:test

    drop table if exists payment cascade 

    drop table if exists payment cascade ;
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  p6spy - #1721330073154 | took 0ms | statement | connection 60| url jdbc:h2:mem:test

    drop table if exists queue_token cascade 

    drop table if exists queue_token cascade ;
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  p6spy - #1721330073156 | took 1ms | statement | connection 60| url jdbc:h2:mem:test

    drop table if exists reservation cascade 

    drop table if exists reservation cascade ;
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  p6spy - #1721330073158 | took 0ms | statement | connection 60| url jdbc:h2:mem:test

    drop table if exists seat cascade 

    drop table if exists seat cascade ;
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2024-07-19 04:14:33 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 04:14:37 [Test worker] INFO  i.j.a.t.c.ConcertControllerTest - Starting ConcertControllerTest using Java 17.0.11 with PID 33651 (started by cheonjeeyeon in /Users/cheonjeeyeon/Documents/hanghae/ticket-reserve-system)
2024-07-19 04:14:37 [Test worker] INFO  i.j.a.t.c.ConcertControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-07-19 04:14:38 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-19 04:14:38 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 115 ms. Found 7 JPA repository interfaces.
2024-07-19 04:14:39 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-19 04:14:39 [Test worker] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-19 04:14:39 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-19 04:14:39 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-19 04:14:39 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-19 04:14:40 [Test worker] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=SA
2024-07-19 04:14:40 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-19 04:14:41 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081491 | took 1ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists app_user cascade 

    drop table if exists app_user cascade ;
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081492 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists concert cascade 

    drop table if exists concert cascade ;
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081493 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists concert_schedule cascade 

    drop table if exists concert_schedule cascade ;
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081494 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists payment cascade 

    drop table if exists payment cascade ;
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081495 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists queue_token cascade 

    drop table if exists queue_token cascade ;
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081496 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists reservation cascade 

    drop table if exists reservation cascade ;
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081497 | took 0ms | statement | connection 1| url jdbc:h2:mem:test

    drop table if exists seat cascade 

    drop table if exists seat cascade ;
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081519 | took 13ms | statement | connection 2| url jdbc:h2:mem:test

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    )

    create table app_user (
        balance integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        primary key (user_id)
    );
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081523 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    )

    create table concert (
        concert_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        concert_name varchar(255),
        primary key (concert_id)
    );
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081527 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    )

    create table concert_schedule (
        concert_date timestamp(6),
        concert_id bigint,
        concert_schedule_id bigint generated by default as identity,
        created_at timestamp(6),
        updated_at timestamp(6),
        location varchar(255),
        primary key (concert_schedule_id)
    );
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081531 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    )

    create table payment (
        amount integer,
        created_at timestamp(6),
        payment_id bigint generated by default as identity,
        reservation_id bigint,
        updated_at timestamp(6),
        primary key (payment_id)
    );
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081537 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    )

    create table queue_token (
        activated_at timestamp(6),
        concert_id bigint,
        created_at timestamp(6),
        expired_at timestamp(6),
        sequence_id bigint,
        token_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        status enum ('ACTIVE','EXPIRED','WAITING'),
        primary key (token_id)
    );
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081541 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    )

    create table reservation (
        created_at timestamp(6),
        reservation_id bigint generated by default as identity,
        seat_id bigint,
        token_id bigint,
        updated_at timestamp(6),
        status enum ('CANCELLED','CONFIRMED','RESERVED'),
        primary key (reservation_id)
    );
2024-07-19 04:14:41 [Test worker] INFO  p6spy - #1721330081545 | took 1ms | statement | connection 2| url jdbc:h2:mem:test

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    )

    create table seat (
        ticket_price integer,
        concert_schedule_id bigint,
        created_at timestamp(6),
        seat_id bigint generated by default as identity,
        updated_at timestamp(6),
        seat_number varchar(255),
        status enum ('AVAILABLE','PAID','RESERVED'),
        primary key (seat_id)
    );
2024-07-19 04:14:41 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 04:14:41 [Test worker] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-19 04:14:43 [Test worker] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
2024-07-19 04:14:43 [Test worker] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2024-07-19 04:14:43 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2024-07-19 04:14:43 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2024-07-19 04:14:43 [Test worker] INFO  i.j.a.t.c.ConcertControllerTest - Started ConcertControllerTest in 6.576 seconds (process running for 8.254)
2024-07-19 04:14:43 [Test worker] INFO  p6spy - #1721330083454 | took 3ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:43 [Test worker] INFO  p6spy - #1721330083455 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:43 [Test worker] INFO  p6spy - #1721330083456 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:43 [Test worker] INFO  p6spy - #1721330083459 | took 1ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 04:14:43 [Test worker] INFO  p6spy - #1721330083460 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 04:14:43 [Test worker] INFO  API - RequestId : ae31f8d9-b6b6-46d9-86d4-f09c384d61ba, Request URL: http://localhost/api/v1/concerts/3/seats, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084123 | took 9ms | statement | connection 4| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=3 and qte1_0.token_id=5;
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084220 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=? and cse1_0.concert_date=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=3 and cse1_0.concert_date='2025-07-19T18:30:00.000+0900';
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084229 | took 0ms | statement | connection 4| url jdbc:h2:mem:test
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.concert_schedule_id=? and se1_0.status=?
select se1_0.seat_id,se1_0.concert_schedule_id,se1_0.created_at,se1_0.seat_number,se1_0.status,se1_0.ticket_price,se1_0.updated_at from seat se1_0 where se1_0.concert_schedule_id=4 and se1_0.status='AVAILABLE';
2024-07-19 04:14:44 [Test worker] INFO  API - RequestId : ae31f8d9-b6b6-46d9-86d4-f09c384d61ba, Response Status: 200
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084332 | took 1ms | rollback | connection 4| url jdbc:h2:mem:test

;
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084351 | took 1ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084353 | took 1ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084356 | took 1ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084359 | took 2ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084361 | took 1ms | statement | connection 5| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 04:14:44 [Test worker] INFO  API - RequestId : 55e6e9bf-72d5-4a4a-9953-715cc084645e, Request URL: http://localhost/api/v1/concerts/1/dates, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084369 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=1 and qte1_0.token_id=2;
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084397 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=?
select ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0 where ce1_0.concert_id=1;
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084405 | took 0ms | statement | connection 5| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=1;
2024-07-19 04:14:44 [Test worker] INFO  API - RequestId : 55e6e9bf-72d5-4a4a-9953-715cc084645e, Response Status: 200
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084422 | took 0ms | rollback | connection 5| url jdbc:h2:mem:test

;
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084431 | took 1ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00')
INSERT INTO queue_token (token_id, user_id, concert_id, status, expired_at) VALUES (1, 1, 1, 'EXPIRED', '2024-07-07 12:00:00'), (2, 2, 1, 'ACTIVE', '2025-07-13 14:00:00'), (3, 3, 2, 'WAITING', '2024-07-13 10:00:00'), (4, 5, 1, 'ACTIVE', '2024-07-14 11:00:00'), (5, 6, 3, 'ACTIVE', '2025-07-14 11:00:00'), (6, 4, 3, 'ACTIVE', '2025-07-14 11:00:00'), (7, 10, 2, 'ACTIVE', '2024-07-20 10:00:00');
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084433 | took 1ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00')
INSERT INTO concert (concert_id, concert_name, created_at, updated_at) VALUES (1,'콘서트1', '2024-07-05 10:00:00', '2024-07-05 10:00:00'), (2,'콘서트2', '2024-07-06 09:30:00', '2024-07-06 09:30:00'), (3,'콘서트3', '2024-07-06 09:30:00', '2024-07-06 09:30:00');
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084435 | took 1ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미')
INSERT INTO concert_schedule (concert_schedule_id, concert_id, concert_date, location) VALUES (1,1, '2025-07-15 19:00:00', '서울'), (2,1, '2025-07-16 19:00:00', '서울'), (3,2, '2025-07-17 18:30:00', '부산'), (4,3, '2025-07-19 18:30:00', '구미');
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084437 | took 1ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now())
INSERT INTO seat (seat_id,concert_schedule_id,seat_number,ticket_price,status,created_at,updated_at) VALUES (1,3,'A01',5000,'AVAILABLE',now(),now()), (2,3,'A02',5000,'AVAILABLE',now(),now()), (3,3,'A03',5000,'RESERVED',now(),now()), (4,3,'A04',5000,'AVAILABLE',now(),now()), (5,3,'A05',1555000,'RESERVED',now(),now()), (6,3,'B01',5000,'PAID',now(),now()), (7,3,'B02',5000,'PAID',now(),now()), (8,3,'B03',5000,'AVAILABLE',now(),now()), (9,1,'C01',5000,'AVAILABLE',now(),now()), (10,1,'C02',5000,'AVAILABLE',now(),now());
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084440 | took 1ms | statement | connection 6| url jdbc:h2:mem:test
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now())
INSERT INTO reservation (reservation_id, seat_id, token_id, status, created_at, updated_at) VALUES (1,3,5,'RESERVED',now(),now()), (2,5,6,'RESERVED','2024-07-05 10:00:00',now()), (3,8,2,'CANCELLED','2024-07-05 10:00:00',now());
2024-07-19 04:14:44 [Test worker] INFO  API - RequestId : da73e003-ae27-494d-a86f-8db88b46321e, Request URL: http://localhost/api/v1/concerts/3/seats, HTTP Method: GET, IP: 127.0.0.1 Request Body: 
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084452 | took 1ms | statement | connection 6| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=? and qte1_0.token_id=?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.concert_id=3 and qte1_0.token_id=5;
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084461 | took 0ms | statement | connection 6| url jdbc:h2:mem:test
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=? and cse1_0.concert_date=?
select cse1_0.concert_schedule_id,cse1_0.concert_date,cse1_0.concert_id,cse1_0.created_at,cse1_0.location,cse1_0.updated_at from concert_schedule cse1_0 where cse1_0.concert_id=3 and cse1_0.concert_date='2025-08-19T18:30:00.000+0900';
2024-07-19 04:14:44 [Test worker] INFO  API - RequestId : da73e003-ae27-494d-a86f-8db88b46321e, Response Status: 404
2024-07-19 04:14:44 [Test worker] INFO  p6spy - #1721330084560 | took 0ms | rollback | connection 6| url jdbc:h2:mem:test

;
2024-07-19 04:14:44 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-19 04:14:44 [SpringApplicationShutdownHook] INFO  p6spy - #1721330084588 | took 2ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists app_user cascade 

    drop table if exists app_user cascade ;
2024-07-19 04:14:44 [SpringApplicationShutdownHook] INFO  p6spy - #1721330084589 | took 0ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists concert cascade 

    drop table if exists concert cascade ;
2024-07-19 04:14:44 [SpringApplicationShutdownHook] INFO  p6spy - #1721330084592 | took 1ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists concert_schedule cascade 

    drop table if exists concert_schedule cascade ;
2024-07-19 04:14:44 [SpringApplicationShutdownHook] INFO  p6spy - #1721330084594 | took 1ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists payment cascade 

    drop table if exists payment cascade ;
2024-07-19 04:14:44 [SpringApplicationShutdownHook] INFO  p6spy - #1721330084595 | took 0ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists queue_token cascade 

    drop table if exists queue_token cascade ;
2024-07-19 04:14:44 [SpringApplicationShutdownHook] INFO  p6spy - #1721330084596 | took 1ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists reservation cascade 

    drop table if exists reservation cascade ;
2024-07-19 04:14:44 [SpringApplicationShutdownHook] INFO  p6spy - #1721330084597 | took 0ms | statement | connection 7| url jdbc:h2:mem:test

    drop table if exists seat cascade 

    drop table if exists seat cascade ;
2024-07-19 04:14:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-19 04:14:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-19 04:15:00 [scheduling-1] INFO  p6spy - #1721330100008 | took 0ms | statement | connection 71| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:15:00.002+0900';
2024-07-19 04:15:00 [scheduling-1] INFO  p6spy - #1721330100010 | took 0ms | statement | connection 72| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:15:00 [scheduling-1] INFO  p6spy - #1721330100013 | took 0ms | statement | connection 73| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:10:00.012+0900';
2024-07-19 04:15:00 [scheduling-1] INFO  p6spy - #1721330100015 | took 0ms | statement | connection 73| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:15:00 [scheduling-1] INFO  p6spy - #1721330100016 | took 0ms | commit | connection 73| url jdbc:h2:mem:test

;
2024-07-19 04:16:00 [scheduling-1] INFO  p6spy - #1721330160004 | took 0ms | statement | connection 74| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:11:00.003+0900';
2024-07-19 04:16:00 [scheduling-1] INFO  p6spy - #1721330160006 | took 0ms | statement | connection 74| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:16:00 [scheduling-1] INFO  p6spy - #1721330160006 | took 0ms | commit | connection 74| url jdbc:h2:mem:test

;
2024-07-19 04:16:00 [scheduling-1] INFO  p6spy - #1721330160007 | took 0ms | statement | connection 75| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:16:00 [scheduling-1] INFO  p6spy - #1721330160010 | took 0ms | statement | connection 76| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:16:00.008+0900';
2024-07-19 04:17:00 [scheduling-1] INFO  p6spy - #1721330220005 | took 0ms | statement | connection 77| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:12:00.003+0900';
2024-07-19 04:17:00 [scheduling-1] INFO  p6spy - #1721330220006 | took 0ms | statement | connection 77| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:17:00 [scheduling-1] INFO  p6spy - #1721330220006 | took 0ms | commit | connection 77| url jdbc:h2:mem:test

;
2024-07-19 04:17:00 [scheduling-1] INFO  p6spy - #1721330220009 | took 0ms | statement | connection 78| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:17:00.007+0900';
2024-07-19 04:17:00 [scheduling-1] INFO  p6spy - #1721330220010 | took 0ms | statement | connection 79| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:18:00 [scheduling-1] INFO  p6spy - #1721330280005 | took 0ms | statement | connection 80| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:18:00.002+0900';
2024-07-19 04:18:00 [scheduling-1] INFO  p6spy - #1721330280007 | took 0ms | statement | connection 81| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:18:00 [scheduling-1] INFO  p6spy - #1721330280010 | took 0ms | statement | connection 82| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:13:00.008+0900';
2024-07-19 04:18:00 [scheduling-1] INFO  p6spy - #1721330280012 | took 0ms | statement | connection 82| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:18:00 [scheduling-1] INFO  p6spy - #1721330280012 | took 0ms | commit | connection 82| url jdbc:h2:mem:test

;
2024-07-19 04:19:00 [scheduling-1] INFO  p6spy - #1721330340005 | took 0ms | statement | connection 83| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:19:00 [scheduling-1] INFO  p6spy - #1721330340008 | took 0ms | statement | connection 84| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:19:00.005+0900';
2024-07-19 04:19:00 [scheduling-1] INFO  p6spy - #1721330340010 | took 0ms | statement | connection 85| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:14:00.008+0900';
2024-07-19 04:19:00 [scheduling-1] INFO  p6spy - #1721330340012 | took 0ms | statement | connection 85| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:19:00 [scheduling-1] INFO  p6spy - #1721330340012 | took 0ms | commit | connection 85| url jdbc:h2:mem:test

;
2024-07-19 04:20:00 [scheduling-1] INFO  p6spy - #1721330400002 | took 0ms | statement | connection 86| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:20:00 [scheduling-1] INFO  p6spy - #1721330400005 | took 0ms | statement | connection 87| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:20:00.003+0900';
2024-07-19 04:20:00 [scheduling-1] INFO  p6spy - #1721330400008 | took 0ms | statement | connection 88| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:15:00.006+0900';
2024-07-19 04:20:00 [scheduling-1] INFO  p6spy - #1721330400009 | took 0ms | statement | connection 88| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:20:00 [scheduling-1] INFO  p6spy - #1721330400010 | took 0ms | commit | connection 88| url jdbc:h2:mem:test

;
2024-07-19 04:21:00 [scheduling-1] INFO  p6spy - #1721330460003 | took 0ms | statement | connection 89| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:21:00.000+0900';
2024-07-19 04:21:00 [scheduling-1] INFO  p6spy - #1721330460005 | took 0ms | statement | connection 90| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:16:00.004+0900';
2024-07-19 04:21:00 [scheduling-1] INFO  p6spy - #1721330460008 | took 0ms | statement | connection 90| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:21:00 [scheduling-1] INFO  p6spy - #1721330460008 | took 0ms | commit | connection 90| url jdbc:h2:mem:test

;
2024-07-19 04:21:00 [scheduling-1] INFO  p6spy - #1721330460011 | took 0ms | statement | connection 91| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:22:00 [scheduling-1] INFO  p6spy - #1721330520006 | took 0ms | statement | connection 92| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:22:00.003+0900';
2024-07-19 04:22:00 [scheduling-1] INFO  p6spy - #1721330520011 | took 0ms | statement | connection 93| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:22:00 [scheduling-1] INFO  p6spy - #1721330520014 | took 0ms | statement | connection 94| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:17:00.012+0900';
2024-07-19 04:22:00 [scheduling-1] INFO  p6spy - #1721330520017 | took 0ms | statement | connection 94| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:22:00 [scheduling-1] INFO  p6spy - #1721330520018 | took 0ms | commit | connection 94| url jdbc:h2:mem:test

;
2024-07-19 04:23:00 [scheduling-1] INFO  p6spy - #1721330580005 | took 0ms | statement | connection 95| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:23:00 [scheduling-1] INFO  p6spy - #1721330580011 | took 0ms | statement | connection 96| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:18:00.009+0900';
2024-07-19 04:23:00 [scheduling-1] INFO  p6spy - #1721330580014 | took 0ms | statement | connection 96| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:23:00 [scheduling-1] INFO  p6spy - #1721330580015 | took 0ms | commit | connection 96| url jdbc:h2:mem:test

;
2024-07-19 04:23:00 [scheduling-1] INFO  p6spy - #1721330580019 | took 0ms | statement | connection 97| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:23:00.016+0900';
2024-07-19 04:24:00 [scheduling-1] INFO  p6spy - #1721330640005 | took 0ms | statement | connection 98| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:24:00.003+0900';
2024-07-19 04:24:00 [scheduling-1] INFO  p6spy - #1721330640007 | took 0ms | statement | connection 99| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:24:00 [scheduling-1] INFO  p6spy - #1721330640009 | took 0ms | statement | connection 100| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:19:00.008+0900';
2024-07-19 04:24:00 [scheduling-1] INFO  p6spy - #1721330640011 | took 0ms | statement | connection 100| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:24:00 [scheduling-1] INFO  p6spy - #1721330640011 | took 0ms | commit | connection 100| url jdbc:h2:mem:test

;
2024-07-19 04:25:00 [scheduling-1] INFO  p6spy - #1721330700006 | took 0ms | statement | connection 101| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:20:00.004+0900';
2024-07-19 04:25:00 [scheduling-1] INFO  p6spy - #1721330700007 | took 0ms | statement | connection 101| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:25:00 [scheduling-1] INFO  p6spy - #1721330700007 | took 0ms | commit | connection 101| url jdbc:h2:mem:test

;
2024-07-19 04:25:00 [scheduling-1] INFO  p6spy - #1721330700009 | took 0ms | statement | connection 102| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:25:00 [scheduling-1] INFO  p6spy - #1721330700011 | took 0ms | statement | connection 103| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:25:00.009+0900';
2024-07-19 04:26:00 [scheduling-1] INFO  p6spy - #1721330760004 | took 0ms | statement | connection 104| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:26:00 [scheduling-1] INFO  p6spy - #1721330760007 | took 0ms | statement | connection 105| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:26:00.005+0900';
2024-07-19 04:26:00 [scheduling-1] INFO  p6spy - #1721330760009 | took 0ms | statement | connection 106| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:21:00.008+0900';
2024-07-19 04:26:00 [scheduling-1] INFO  p6spy - #1721330760011 | took 0ms | statement | connection 106| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:26:00 [scheduling-1] INFO  p6spy - #1721330760011 | took 0ms | commit | connection 106| url jdbc:h2:mem:test

;
2024-07-19 04:27:00 [scheduling-1] INFO  p6spy - #1721330820022 | took 1ms | statement | connection 107| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:27:00.004+0900';
2024-07-19 04:27:00 [scheduling-1] INFO  p6spy - #1721330820046 | took 0ms | statement | connection 108| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:27:00 [scheduling-1] INFO  p6spy - #1721330820067 | took 0ms | statement | connection 109| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:22:00.060+0900';
2024-07-19 04:27:00 [scheduling-1] INFO  p6spy - #1721330820081 | took 0ms | statement | connection 109| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:27:00 [scheduling-1] INFO  p6spy - #1721330820083 | took 0ms | commit | connection 109| url jdbc:h2:mem:test

;
2024-07-19 04:28:00 [scheduling-1] INFO  p6spy - #1721330880004 | took 0ms | statement | connection 110| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:23:00.002+0900';
2024-07-19 04:28:00 [scheduling-1] INFO  p6spy - #1721330880012 | took 0ms | statement | connection 110| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:28:00 [scheduling-1] INFO  p6spy - #1721330880012 | took 0ms | commit | connection 110| url jdbc:h2:mem:test

;
2024-07-19 04:28:00 [scheduling-1] INFO  p6spy - #1721330880015 | took 0ms | statement | connection 111| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:28:00 [scheduling-1] INFO  p6spy - #1721330880020 | took 0ms | statement | connection 112| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:28:00.016+0900';
2024-07-19 04:29:00 [scheduling-1] INFO  p6spy - #1721330940004 | took 0ms | statement | connection 113| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:24:00.001+0900';
2024-07-19 04:29:00 [scheduling-1] INFO  p6spy - #1721330940007 | took 0ms | statement | connection 113| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:29:00 [scheduling-1] INFO  p6spy - #1721330940007 | took 0ms | commit | connection 113| url jdbc:h2:mem:test

;
2024-07-19 04:29:00 [scheduling-1] INFO  p6spy - #1721330940012 | took 0ms | statement | connection 114| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:29:00.008+0900';
2024-07-19 04:29:00 [scheduling-1] INFO  p6spy - #1721330940014 | took 0ms | statement | connection 115| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:30:00 [scheduling-1] INFO  p6spy - #1721331000007 | took 0ms | statement | connection 116| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:30:00.003+0900';
2024-07-19 04:30:00 [scheduling-1] INFO  p6spy - #1721331000011 | took 0ms | statement | connection 117| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:25:00.009+0900';
2024-07-19 04:30:00 [scheduling-1] INFO  p6spy - #1721331000014 | took 0ms | statement | connection 117| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:30:00 [scheduling-1] INFO  p6spy - #1721331000015 | took 0ms | commit | connection 117| url jdbc:h2:mem:test

;
2024-07-19 04:30:00 [scheduling-1] INFO  p6spy - #1721331000017 | took 0ms | statement | connection 118| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:31:00 [scheduling-1] INFO  p6spy - #1721331060004 | took 0ms | statement | connection 119| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:31:00.002+0900';
2024-07-19 04:31:00 [scheduling-1] INFO  p6spy - #1721331060007 | took 0ms | statement | connection 120| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:26:00.005+0900';
2024-07-19 04:31:00 [scheduling-1] INFO  p6spy - #1721331060009 | took 0ms | statement | connection 120| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:31:00 [scheduling-1] INFO  p6spy - #1721331060009 | took 0ms | commit | connection 120| url jdbc:h2:mem:test

;
2024-07-19 04:31:00 [scheduling-1] INFO  p6spy - #1721331060011 | took 0ms | statement | connection 121| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:32:00 [scheduling-1] INFO  p6spy - #1721331120003 | took 0ms | statement | connection 122| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:32:00.000+0900';
2024-07-19 04:32:00 [scheduling-1] INFO  p6spy - #1721331120006 | took 0ms | statement | connection 123| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:32:00 [scheduling-1] INFO  p6spy - #1721331120008 | took 0ms | statement | connection 124| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:27:00.006+0900';
2024-07-19 04:32:00 [scheduling-1] INFO  p6spy - #1721331120010 | took 0ms | statement | connection 124| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:32:00 [scheduling-1] INFO  p6spy - #1721331120010 | took 0ms | commit | connection 124| url jdbc:h2:mem:test

;
2024-07-19 04:33:00 [scheduling-1] INFO  p6spy - #1721331180002 | took 0ms | statement | connection 125| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:28:00.000+0900';
2024-07-19 04:33:00 [scheduling-1] INFO  p6spy - #1721331180004 | took 0ms | statement | connection 125| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:33:00 [scheduling-1] INFO  p6spy - #1721331180004 | took 0ms | commit | connection 125| url jdbc:h2:mem:test

;
2024-07-19 04:33:00 [scheduling-1] INFO  p6spy - #1721331180007 | took 0ms | statement | connection 126| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:33:00 [scheduling-1] INFO  p6spy - #1721331180010 | took 0ms | statement | connection 127| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:33:00.007+0900';
2024-07-19 04:34:00 [scheduling-1] INFO  p6spy - #1721331240001 | took 0ms | statement | connection 128| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:34:00 [scheduling-1] INFO  p6spy - #1721331240005 | took 0ms | statement | connection 129| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:34:00.002+0900';
2024-07-19 04:34:00 [scheduling-1] INFO  p6spy - #1721331240008 | took 0ms | statement | connection 130| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:29:00.006+0900';
2024-07-19 04:34:00 [scheduling-1] INFO  p6spy - #1721331240011 | took 0ms | statement | connection 130| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:34:00 [scheduling-1] INFO  p6spy - #1721331240011 | took 0ms | commit | connection 130| url jdbc:h2:mem:test

;
2024-07-19 04:34:59 [scheduling-1] INFO  p6spy - #1721331299784 | took 0ms | statement | connection 131| url jdbc:h2:mem:test
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status=? and qte1_0.expired_at<?
select qte1_0.token_id,qte1_0.activated_at,qte1_0.concert_id,qte1_0.created_at,qte1_0.expired_at,qte1_0.sequence_id,qte1_0.status,qte1_0.updated_at,qte1_0.user_id from queue_token qte1_0 where qte1_0.status='ACTIVE' and qte1_0.expired_at<'2024-07-19T04:34:59.780+0900';
2024-07-19 04:34:59 [scheduling-1] INFO  p6spy - #1721331299792 | took 0ms | statement | connection 132| url jdbc:h2:mem:test
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp
select distinct ce1_0.concert_id,ce1_0.concert_name,ce1_0.created_at,ce1_0.updated_at from concert ce1_0,concert_schedule cse1_0 where cse1_0.concert_id=ce1_0.concert_id and cse1_0.concert_date>localtimestamp;
2024-07-19 04:34:59 [scheduling-1] INFO  p6spy - #1721331299794 | took 0ms | statement | connection 133| url jdbc:h2:mem:test
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<?
select re1_0.reservation_id,re1_0.created_at,re1_0.seat_id,re1_0.status,re1_0.token_id,re1_0.updated_at from reservation re1_0 left join payment pe1_0 on re1_0.reservation_id=pe1_0.reservation_id where re1_0.status='RESERVED' and pe1_0.payment_id is null and re1_0.created_at<'2024-07-19T04:29:59.792+0900';
2024-07-19 04:34:59 [scheduling-1] INFO  p6spy - #1721331299795 | took 0ms | statement | connection 133| url jdbc:h2:mem:test
update seat se1_0 set status=? where (1 = case when se1_0.seat_id is not null then 0 end)
update seat se1_0 set status='AVAILABLE' where (1 = case when se1_0.seat_id is not null then 0 end);
2024-07-19 04:34:59 [scheduling-1] INFO  p6spy - #1721331299795 | took 0ms | commit | connection 133| url jdbc:h2:mem:test

;
2024-07-19 05:16:59 [scheduling-1] INFO  p6spy - #1721333819118 | took 0ms | rollback | connection 134| url jdbc:h2:mem:test

;
2024-07-19 05:17:00 [scheduling-1] INFO  p6spy - #1721333820014 | took 0ms | rollback | connection 137| url jdbc:h2:mem:test

;
2024-07-19 05:18:00 [scheduling-1] INFO  p6spy - #1721333880028 | took 0ms | rollback | connection 141| url jdbc:h2:mem:test

;
2024-07-19 05:19:00 [scheduling-1] INFO  p6spy - #1721333940016 | took 0ms | rollback | connection 143| url jdbc:h2:mem:test

;
2024-07-19 05:20:00 [scheduling-1] INFO  p6spy - #1721334000036 | took 0ms | rollback | connection 148| url jdbc:h2:mem:test

;
2024-07-19 05:21:00 [scheduling-1] INFO  p6spy - #1721334060014 | took 0ms | rollback | connection 149| url jdbc:h2:mem:test

;
2024-07-19 05:22:00 [scheduling-1] INFO  p6spy - #1721334120027 | took 0ms | rollback | connection 153| url jdbc:h2:mem:test

;
2024-07-19 06:22:58 [scheduling-1] INFO  p6spy - #1721337778924 | took 0ms | rollback | connection 156| url jdbc:h2:mem:test

;
2024-07-19 06:23:00 [scheduling-1] INFO  p6spy - #1721337780034 | took 0ms | rollback | connection 160| url jdbc:h2:mem:test

;
2024-07-19 08:23:52 [scheduling-1] INFO  p6spy - #1721345032300 | took 0ms | rollback | connection 163| url jdbc:h2:mem:test

;
2024-07-19 08:24:00 [scheduling-1] INFO  p6spy - #1721345040008 | took 0ms | rollback | connection 164| url jdbc:h2:mem:test

;
2024-07-19 09:24:56 [scheduling-1] INFO  p6spy - #1721348696053 | took 0ms | rollback | connection 169| url jdbc:h2:mem:test

;
2024-07-19 09:25:00 [scheduling-1] INFO  p6spy - #1721348700023 | took 0ms | rollback | connection 172| url jdbc:h2:mem:test

;
2024-07-19 10:25:55 [scheduling-1] INFO  p6spy - #1721352355585 | took 0ms | rollback | connection 175| url jdbc:h2:mem:test

;
2024-07-19 10:25:57 [scheduling-1] INFO  p6spy - #1721352357905 | took 0ms | rollback | connection 177| url jdbc:h2:mem:test

;
2024-07-19 10:30:36 [scheduling-1] INFO  p6spy - #1721352636507 | took 0ms | rollback | connection 179| url jdbc:h2:mem:test

;
2024-07-19 10:31:00 [scheduling-1] INFO  p6spy - #1721352660009 | took 0ms | rollback | connection 182| url jdbc:h2:mem:test

;
2024-07-19 10:32:00 [scheduling-1] INFO  p6spy - #1721352720012 | took 0ms | rollback | connection 185| url jdbc:h2:mem:test

;
2024-07-19 10:33:00 [scheduling-1] INFO  p6spy - #1721352780019 | took 0ms | rollback | connection 189| url jdbc:h2:mem:test

;
2024-07-19 10:34:00 [scheduling-1] INFO  p6spy - #1721352840006 | took 0ms | rollback | connection 191| url jdbc:h2:mem:test

;
2024-07-19 10:35:00 [scheduling-1] INFO  p6spy - #1721352900027 | took 0ms | rollback | connection 196| url jdbc:h2:mem:test

;
2024-07-19 10:36:00 [scheduling-1] INFO  p6spy - #1721352960019 | took 0ms | rollback | connection 198| url jdbc:h2:mem:test

;
2024-07-19 10:45:24 [scheduling-1] INFO  p6spy - #1721353524521 | took 0ms | rollback | connection 201| url jdbc:h2:mem:test

;
2024-07-19 10:46:00 [scheduling-1] INFO  p6spy - #1721353560017 | took 0ms | rollback | connection 204| url jdbc:h2:mem:test

;
2024-07-19 10:47:00 [scheduling-1] INFO  p6spy - #1721353620018 | took 0ms | rollback | connection 208| url jdbc:h2:mem:test

;
2024-07-19 10:48:00 [scheduling-1] INFO  p6spy - #1721353680016 | took 0ms | rollback | connection 210| url jdbc:h2:mem:test

;
2024-07-19 10:49:00 [scheduling-1] INFO  p6spy - #1721353740011 | took 0ms | rollback | connection 213| url jdbc:h2:mem:test

;
2024-07-19 10:50:00 [scheduling-1] INFO  p6spy - #1721353800003 | took 0ms | rollback | connection 215| url jdbc:h2:mem:test

;
2024-07-19 10:51:00 [scheduling-1] INFO  p6spy - #1721353860003 | took 0ms | rollback | connection 218| url jdbc:h2:mem:test

;
2024-07-19 10:52:00 [scheduling-1] INFO  p6spy - #1721353920007 | took 0ms | rollback | connection 223| url jdbc:h2:mem:test

;
2024-07-19 10:53:00 [scheduling-1] INFO  p6spy - #1721353980010 | took 0ms | rollback | connection 225| url jdbc:h2:mem:test

;
2024-07-19 10:54:00 [scheduling-1] INFO  p6spy - #1721354040001 | took 0ms | rollback | connection 227| url jdbc:h2:mem:test

;
2024-07-19 10:55:00 [scheduling-1] INFO  p6spy - #1721354100007 | took 0ms | rollback | connection 232| url jdbc:h2:mem:test

;
2024-07-19 10:56:00 [scheduling-1] INFO  p6spy - #1721354160002 | took 0ms | rollback | connection 233| url jdbc:h2:mem:test

;
2024-07-19 10:57:00 [scheduling-1] INFO  p6spy - #1721354220007 | took 0ms | rollback | connection 237| url jdbc:h2:mem:test

;
2024-07-19 10:58:00 [scheduling-1] INFO  p6spy - #1721354280006 | took 0ms | rollback | connection 240| url jdbc:h2:mem:test

;
2024-07-19 10:59:00 [scheduling-1] INFO  p6spy - #1721354340004 | took 0ms | rollback | connection 243| url jdbc:h2:mem:test

;
2024-07-19 11:00:00 [scheduling-1] INFO  p6spy - #1721354400005 | took 0ms | rollback | connection 246| url jdbc:h2:mem:test

;
2024-07-19 11:01:00 [scheduling-1] INFO  p6spy - #1721354460006 | took 0ms | rollback | connection 249| url jdbc:h2:mem:test

;
2024-07-19 11:02:00 [scheduling-1] INFO  p6spy - #1721354520004 | took 0ms | rollback | connection 251| url jdbc:h2:mem:test

;
2024-07-19 11:03:00 [scheduling-1] INFO  p6spy - #1721354580007 | took 0ms | rollback | connection 255| url jdbc:h2:mem:test

;
2024-07-19 11:04:00 [scheduling-1] INFO  p6spy - #1721354640004 | took 0ms | rollback | connection 257| url jdbc:h2:mem:test

;
2024-07-19 11:05:00 [scheduling-1] INFO  p6spy - #1721354700014 | took 0ms | rollback | connection 262| url jdbc:h2:mem:test

;
2024-07-19 11:06:00 [scheduling-1] INFO  p6spy - #1721354760003 | took 0ms | rollback | connection 263| url jdbc:h2:mem:test

;
2024-07-19 11:07:00 [scheduling-1] INFO  p6spy - #1721354820007 | took 0ms | rollback | connection 268| url jdbc:h2:mem:test

;
2024-07-19 11:08:00 [scheduling-1] INFO  p6spy - #1721354880003 | took 0ms | rollback | connection 269| url jdbc:h2:mem:test

;
2024-07-19 11:09:00 [scheduling-1] INFO  p6spy - #1721354940008 | took 0ms | rollback | connection 274| url jdbc:h2:mem:test

;
2024-07-19 11:10:00 [scheduling-1] INFO  p6spy - #1721355000003 | took 0ms | rollback | connection 275| url jdbc:h2:mem:test

;
2024-07-19 11:11:00 [scheduling-1] INFO  p6spy - #1721355060011 | took 0ms | rollback | connection 280| url jdbc:h2:mem:test

;
2024-07-19 11:12:00 [scheduling-1] INFO  p6spy - #1721355120011 | took 0ms | rollback | connection 282| url jdbc:h2:mem:test

;
2024-07-19 11:13:00 [scheduling-1] INFO  p6spy - #1721355180008 | took 0ms | rollback | connection 286| url jdbc:h2:mem:test

;
2024-07-19 11:14:00 [scheduling-1] INFO  p6spy - #1721355240016 | took 0ms | rollback | connection 288| url jdbc:h2:mem:test

;
2024-07-19 11:15:00 [scheduling-1] INFO  p6spy - #1721355300007 | took 0ms | rollback | connection 292| url jdbc:h2:mem:test

;
2024-07-19 11:16:00 [scheduling-1] INFO  p6spy - #1721355360008 | took 0ms | rollback | connection 293| url jdbc:h2:mem:test

;
2024-07-19 11:17:00 [scheduling-1] INFO  p6spy - #1721355420006 | took 0ms | rollback | connection 297| url jdbc:h2:mem:test

;
2024-07-19 11:18:00 [scheduling-1] INFO  p6spy - #1721355480012 | took 0ms | rollback | connection 300| url jdbc:h2:mem:test

;
2024-07-19 11:19:00 [scheduling-1] INFO  p6spy - #1721355540007 | took 0ms | rollback | connection 303| url jdbc:h2:mem:test

;
2024-07-19 11:20:00 [scheduling-1] INFO  p6spy - #1721355600002 | took 0ms | rollback | connection 305| url jdbc:h2:mem:test

;
2024-07-19 11:21:00 [scheduling-1] INFO  p6spy - #1721355660007 | took 0ms | rollback | connection 310| url jdbc:h2:mem:test

;
2024-07-19 11:22:00 [scheduling-1] INFO  p6spy - #1721355720004 | took 0ms | rollback | connection 311| url jdbc:h2:mem:test

;
2024-07-19 11:23:00 [scheduling-1] INFO  p6spy - #1721355780008 | took 0ms | rollback | connection 316| url jdbc:h2:mem:test

;
2024-07-19 11:24:00 [scheduling-1] INFO  p6spy - #1721355840006 | took 0ms | rollback | connection 318| url jdbc:h2:mem:test

;
2024-07-19 11:25:00 [scheduling-1] INFO  p6spy - #1721355900013 | took 0ms | rollback | connection 321| url jdbc:h2:mem:test

;
2024-07-19 11:26:00 [scheduling-1] INFO  p6spy - #1721355960006 | took 0ms | rollback | connection 324| url jdbc:h2:mem:test

;
2024-07-19 11:27:00 [scheduling-1] INFO  p6spy - #1721356020008 | took 0ms | rollback | connection 326| url jdbc:h2:mem:test

;
2024-07-19 11:28:00 [scheduling-1] INFO  p6spy - #1721356080006 | took 0ms | rollback | connection 330| url jdbc:h2:mem:test

;
2024-07-19 11:29:00 [scheduling-1] INFO  p6spy - #1721356140007 | took 0ms | rollback | connection 332| url jdbc:h2:mem:test

;
2024-07-19 11:30:00 [scheduling-1] INFO  p6spy - #1721356200011 | took 0ms | rollback | connection 336| url jdbc:h2:mem:test

;
2024-07-19 11:31:00 [scheduling-1] INFO  p6spy - #1721356260007 | took 0ms | rollback | connection 339| url jdbc:h2:mem:test

;
2024-07-19 11:32:00 [scheduling-1] INFO  p6spy - #1721356320004 | took 0ms | rollback | connection 342| url jdbc:h2:mem:test

;
2024-07-19 11:33:00 [scheduling-1] INFO  p6spy - #1721356380005 | took 0ms | rollback | connection 344| url jdbc:h2:mem:test

;
2024-07-19 11:34:00 [scheduling-1] INFO  p6spy - #1721356440006 | took 0ms | rollback | connection 348| url jdbc:h2:mem:test

;
2024-07-19 11:35:00 [scheduling-1] INFO  p6spy - #1721356500011 | took 0ms | rollback | connection 351| url jdbc:h2:mem:test

;
2024-07-19 11:36:00 [scheduling-1] INFO  p6spy - #1721356560011 | took 0ms | rollback | connection 354| url jdbc:h2:mem:test

;
2024-07-19 11:37:00 [scheduling-1] INFO  p6spy - #1721356620011 | took 0ms | rollback | connection 356| url jdbc:h2:mem:test

;
2024-07-19 11:38:00 [scheduling-1] INFO  p6spy - #1721356680015 | took 0ms | rollback | connection 361| url jdbc:h2:mem:test

;
2024-07-19 13:03:03 [scheduling-1] INFO  p6spy - #1721361783180 | took 0ms | rollback | connection 364| url jdbc:h2:mem:test

;
2024-07-19 13:07:45 [scheduling-1] INFO  p6spy - #1721362065269 | took 0ms | rollback | connection 367| url jdbc:h2:mem:test

;
2024-07-19 13:08:00 [scheduling-1] INFO  p6spy - #1721362080019 | took 0ms | rollback | connection 369| url jdbc:h2:mem:test

;
2024-07-19 14:08:57 [scheduling-1] INFO  p6spy - #1721365737884 | took 0ms | rollback | connection 371| url jdbc:h2:mem:test

;
2024-07-19 14:09:00 [scheduling-1] INFO  p6spy - #1721365740018 | took 0ms | rollback | connection 375| url jdbc:h2:mem:test

;
2024-07-19 14:10:00 [scheduling-1] INFO  p6spy - #1721365800026 | took 0ms | rollback | connection 379| url jdbc:h2:mem:test

;
2024-07-19 14:11:00 [scheduling-1] INFO  p6spy - #1721365860013 | took 0ms | rollback | connection 380| url jdbc:h2:mem:test

;
2024-07-19 14:12:00 [scheduling-1] INFO  p6spy - #1721365920019 | took 0ms | rollback | connection 384| url jdbc:h2:mem:test

;
2024-07-19 14:13:00 [scheduling-1] INFO  p6spy - #1721365980027 | took 0ms | rollback | connection 388| url jdbc:h2:mem:test

;
2024-07-19 14:14:00 [scheduling-1] INFO  p6spy - #1721366040015 | took 0ms | rollback | connection 389| url jdbc:h2:mem:test

;
2024-07-19 15:14:56 [scheduling-1] INFO  p6spy - #1721369696027 | took 0ms | rollback | connection 394| url jdbc:h2:mem:test

;
2024-07-19 15:15:00 [scheduling-1] INFO  p6spy - #1721369700011 | took 0ms | rollback | connection 395| url jdbc:h2:mem:test

;
2024-07-19 15:16:00 [scheduling-1] INFO  p6spy - #1721369760020 | took 0ms | rollback | connection 400| url jdbc:h2:mem:test

;
2024-07-19 15:17:00 [scheduling-1] INFO  p6spy - #1721369820013 | took 0ms | rollback | connection 402| url jdbc:h2:mem:test

;
2024-07-19 15:18:00 [scheduling-1] INFO  p6spy - #1721369880022 | took 0ms | rollback | connection 406| url jdbc:h2:mem:test

;
2024-07-19 15:19:00 [scheduling-1] INFO  p6spy - #1721369940015 | took 0ms | rollback | connection 407| url jdbc:h2:mem:test

;
2024-07-19 15:20:00 [scheduling-1] INFO  p6spy - #1721370000022 | took 0ms | rollback | connection 412| url jdbc:h2:mem:test

;
2024-07-19 16:20:58 [scheduling-1] INFO  p6spy - #1721373658641 | took 0ms | rollback | connection 413| url jdbc:h2:mem:test

;
2024-07-19 16:21:00 [scheduling-1] INFO  p6spy - #1721373660018 | took 0ms | rollback | connection 418| url jdbc:h2:mem:test

;
2024-07-19 16:22:00 [scheduling-1] INFO  p6spy - #1721373720010 | took 0ms | rollback | connection 419| url jdbc:h2:mem:test

;
2024-07-19 16:23:00 [scheduling-1] INFO  p6spy - #1721373780022 | took 0ms | rollback | connection 424| url jdbc:h2:mem:test

;
2024-07-19 16:27:35 [scheduling-1] INFO  p6spy - #1721374055095 | took 0ms | rollback | connection 425| url jdbc:h2:mem:test

;
2024-07-19 17:27:56 [scheduling-1] INFO  p6spy - #1721377676186 | took 0ms | rollback | connection 430| url jdbc:h2:mem:test

;
2024-07-19 17:28:00 [scheduling-1] INFO  p6spy - #1721377680009 | took 0ms | rollback | connection 431| url jdbc:h2:mem:test

;
2024-07-19 18:28:57 [scheduling-1] INFO  p6spy - #1721381337940 | took 0ms | rollback | connection 436| url jdbc:h2:mem:test

;
2024-07-19 18:29:00 [scheduling-1] INFO  p6spy - #1721381340006 | took 0ms | rollback | connection 437| url jdbc:h2:mem:test

;
2024-07-19 19:14:59 [scheduling-1] INFO  p6spy - #1721384099193 | took 0ms | rollback | connection 442| url jdbc:h2:mem:test

;
2024-07-19 19:15:00 [scheduling-1] INFO  p6spy - #1721384100010 | took 0ms | rollback | connection 443| url jdbc:h2:mem:test

;
2024-07-19 19:16:29 [scheduling-1] INFO  p6spy - #1721384189279 | took 0ms | rollback | connection 448| url jdbc:h2:mem:test

;
2024-07-19 19:17:00 [scheduling-1] INFO  p6spy - #1721384220008 | took 0ms | rollback | connection 451| url jdbc:h2:mem:test

;
2024-07-19 19:18:00 [scheduling-1] INFO  p6spy - #1721384280011 | took 0ms | rollback | connection 454| url jdbc:h2:mem:test

;
2024-07-19 19:19:00 [scheduling-1] INFO  p6spy - #1721384340030 | took 0ms | rollback | connection 455| url jdbc:h2:mem:test

;
2024-07-19 19:20:00 [scheduling-1] INFO  p6spy - #1721384400013 | took 0ms | rollback | connection 460| url jdbc:h2:mem:test

;
2024-07-19 19:21:00 [scheduling-1] INFO  p6spy - #1721384460009 | took 0ms | rollback | connection 461| url jdbc:h2:mem:test

;
2024-07-19 19:22:00 [scheduling-1] INFO  p6spy - #1721384520011 | took 0ms | rollback | connection 466| url jdbc:h2:mem:test

;
2024-07-19 19:23:00 [scheduling-1] INFO  p6spy - #1721384580009 | took 0ms | rollback | connection 467| url jdbc:h2:mem:test

;
2024-07-19 19:24:00 [scheduling-1] INFO  p6spy - #1721384640014 | took 0ms | rollback | connection 472| url jdbc:h2:mem:test

;
2024-07-19 19:25:00 [scheduling-1] INFO  p6spy - #1721384700008 | took 0ms | rollback | connection 474| url jdbc:h2:mem:test

;
2024-07-19 19:26:00 [scheduling-1] INFO  p6spy - #1721384760017 | took 0ms | rollback | connection 478| url jdbc:h2:mem:test

;
2024-07-19 19:27:00 [scheduling-1] INFO  p6spy - #1721384820011 | took 0ms | rollback | connection 480| url jdbc:h2:mem:test

;
2024-07-19 19:28:00 [scheduling-1] INFO  p6spy - #1721384880011 | took 0ms | rollback | connection 483| url jdbc:h2:mem:test

;
2024-07-19 19:29:00 [scheduling-1] INFO  p6spy - #1721384940011 | took 0ms | rollback | connection 486| url jdbc:h2:mem:test

;
2024-07-19 19:30:00 [scheduling-1] INFO  p6spy - #1721385000007 | took 0ms | rollback | connection 489| url jdbc:h2:mem:test

;
2024-07-19 19:31:00 [scheduling-1] INFO  p6spy - #1721385060012 | took 0ms | rollback | connection 493| url jdbc:h2:mem:test

;
2024-07-19 19:32:00 [scheduling-1] INFO  p6spy - #1721385120006 | took 0ms | rollback | connection 495| url jdbc:h2:mem:test

;
2024-07-19 19:33:00 [scheduling-1] INFO  p6spy - #1721385180012 | took 0ms | rollback | connection 499| url jdbc:h2:mem:test

;
2024-07-19 19:34:00 [scheduling-1] INFO  p6spy - #1721385240008 | took 0ms | rollback | connection 500| url jdbc:h2:mem:test

;
2024-07-19 19:35:00 [scheduling-1] INFO  p6spy - #1721385300006 | took 0ms | rollback | connection 504| url jdbc:h2:mem:test

;
2024-07-19 19:36:00 [scheduling-1] INFO  p6spy - #1721385360005 | took 0ms | rollback | connection 506| url jdbc:h2:mem:test

;
2024-07-19 19:37:00 [scheduling-1] INFO  p6spy - #1721385420003 | took 0ms | rollback | connection 509| url jdbc:h2:mem:test

;
2024-07-19 19:38:00 [scheduling-1] INFO  p6spy - #1721385480007 | took 0ms | rollback | connection 513| url jdbc:h2:mem:test

;
2024-07-19 19:39:00 [scheduling-1] INFO  p6spy - #1721385540019 | took 0ms | rollback | connection 517| url jdbc:h2:mem:test

;
2024-07-19 19:40:00 [scheduling-1] INFO  p6spy - #1721385600008 | took 0ms | rollback | connection 518| url jdbc:h2:mem:test

;
2024-07-19 19:41:00 [scheduling-1] INFO  p6spy - #1721385660005 | took 0ms | rollback | connection 521| url jdbc:h2:mem:test

;
2024-07-19 19:42:00 [scheduling-1] INFO  p6spy - #1721385720009 | took 0ms | rollback | connection 524| url jdbc:h2:mem:test

;
2024-07-19 19:43:00 [scheduling-1] INFO  p6spy - #1721385780015 | took 0ms | rollback | connection 529| url jdbc:h2:mem:test

;
2024-07-19 19:44:00 [scheduling-1] INFO  p6spy - #1721385840004 | took 0ms | rollback | connection 530| url jdbc:h2:mem:test

;
2024-07-19 19:45:00 [scheduling-1] INFO  p6spy - #1721385900015 | took 0ms | rollback | connection 535| url jdbc:h2:mem:test

;
2024-07-19 19:46:00 [scheduling-1] INFO  p6spy - #1721385960005 | took 0ms | rollback | connection 536| url jdbc:h2:mem:test

;
2024-07-19 19:47:00 [scheduling-1] INFO  p6spy - #1721386020009 | took 0ms | rollback | connection 539| url jdbc:h2:mem:test

;
2024-07-19 19:48:00 [scheduling-1] INFO  p6spy - #1721386080017 | took 0ms | rollback | connection 544| url jdbc:h2:mem:test

;
2024-07-19 19:49:00 [scheduling-1] INFO  p6spy - #1721386140009 | took 0ms | rollback | connection 546| url jdbc:h2:mem:test

;
2024-07-19 19:50:00 [scheduling-1] INFO  p6spy - #1721386200005 | took 0ms | rollback | connection 548| url jdbc:h2:mem:test

;
2024-07-19 19:51:00 [scheduling-1] INFO  p6spy - #1721386260009 | took 0ms | rollback | connection 552| url jdbc:h2:mem:test

;
2024-07-19 19:52:00 [scheduling-1] INFO  p6spy - #1721386320010 | took 0ms | rollback | connection 556| url jdbc:h2:mem:test

;
2024-07-19 19:53:00 [scheduling-1] INFO  p6spy - #1721386380012 | took 0ms | rollback | connection 558| url jdbc:h2:mem:test

;
2024-07-19 19:54:00 [scheduling-1] INFO  p6spy - #1721386440011 | took 0ms | rollback | connection 560| url jdbc:h2:mem:test

;
2024-07-19 19:55:00 [scheduling-1] INFO  p6spy - #1721386500015 | took 0ms | rollback | connection 565| url jdbc:h2:mem:test

;
2024-07-19 19:56:00 [scheduling-1] INFO  p6spy - #1721386560018 | took 0ms | rollback | connection 568| url jdbc:h2:mem:test

;
2024-07-19 19:57:00 [scheduling-1] INFO  p6spy - #1721386620017 | took 0ms | rollback | connection 571| url jdbc:h2:mem:test

;
2024-07-19 19:58:00 [scheduling-1] INFO  p6spy - #1721386680011 | took 0ms | rollback | connection 574| url jdbc:h2:mem:test

;
2024-07-19 19:59:00 [scheduling-1] INFO  p6spy - #1721386740009 | took 0ms | rollback | connection 575| url jdbc:h2:mem:test

;
2024-07-19 20:00:00 [scheduling-1] INFO  p6spy - #1721386800013 | took 0ms | rollback | connection 580| url jdbc:h2:mem:test

;
2024-07-19 20:01:00 [scheduling-1] INFO  p6spy - #1721386860012 | took 0ms | rollback | connection 581| url jdbc:h2:mem:test

;
2024-07-19 20:02:00 [scheduling-1] INFO  p6spy - #1721386920007 | took 0ms | rollback | connection 585| url jdbc:h2:mem:test

;
2024-07-19 20:03:00 [scheduling-1] INFO  p6spy - #1721386980010 | took 0ms | rollback | connection 587| url jdbc:h2:mem:test

;
2024-07-19 20:04:00 [scheduling-1] INFO  p6spy - #1721387040008 | took 0ms | rollback | connection 591| url jdbc:h2:mem:test

;
2024-07-19 20:05:00 [scheduling-1] INFO  p6spy - #1721387100009 | took 0ms | rollback | connection 593| url jdbc:h2:mem:test

;
2024-07-19 20:06:00 [scheduling-1] INFO  p6spy - #1721387160014 | took 0ms | rollback | connection 598| url jdbc:h2:mem:test

;
2024-07-19 20:07:00 [scheduling-1] INFO  p6spy - #1721387220014 | took 0ms | rollback | connection 600| url jdbc:h2:mem:test

;
2024-07-19 20:08:00 [scheduling-1] INFO  p6spy - #1721387280007 | took 0ms | rollback | connection 602| url jdbc:h2:mem:test

;
2024-07-19 20:09:00 [scheduling-1] INFO  p6spy - #1721387340009 | took 0ms | rollback | connection 605| url jdbc:h2:mem:test

;
2024-07-19 20:10:00 [scheduling-1] INFO  p6spy - #1721387400011 | took 0ms | rollback | connection 610| url jdbc:h2:mem:test

;
2024-07-19 20:11:00 [scheduling-1] INFO  p6spy - #1721387460012 | took 0ms | rollback | connection 613| url jdbc:h2:mem:test

;
2024-07-19 20:12:00 [scheduling-1] INFO  p6spy - #1721387520010 | took 0ms | rollback | connection 616| url jdbc:h2:mem:test

;
2024-07-19 20:13:00 [scheduling-1] INFO  p6spy - #1721387580013 | took 0ms | rollback | connection 617| url jdbc:h2:mem:test

;
2024-07-19 20:14:00 [scheduling-1] INFO  p6spy - #1721387640015 | took 0ms | rollback | connection 622| url jdbc:h2:mem:test

;
2024-07-19 20:15:00 [scheduling-1] INFO  p6spy - #1721387700011 | took 0ms | rollback | connection 623| url jdbc:h2:mem:test

;
2024-07-19 20:16:00 [scheduling-1] INFO  p6spy - #1721387760008 | took 0ms | rollback | connection 627| url jdbc:h2:mem:test

;
2024-07-19 20:17:00 [scheduling-1] INFO  p6spy - #1721387820019 | took 0ms | rollback | connection 630| url jdbc:h2:mem:test

;
2024-07-19 20:18:00 [scheduling-1] INFO  p6spy - #1721387880009 | took 0ms | rollback | connection 633| url jdbc:h2:mem:test

;
2024-07-19 20:19:00 [scheduling-1] INFO  p6spy - #1721387940006 | took 0ms | rollback | connection 635| url jdbc:h2:mem:test

;
2024-07-19 20:19:59 [scheduling-1] INFO  p6spy - #1721387999943 | took 0ms | rollback | connection 638| url jdbc:h2:mem:test

;
2024-07-19 20:21:00 [scheduling-1] INFO  p6spy - #1721388060006 | took 0ms | rollback | connection 641| url jdbc:h2:mem:test

;
2024-07-19 20:22:00 [scheduling-1] INFO  p6spy - #1721388120010 | took 0ms | rollback | connection 646| url jdbc:h2:mem:test

;
2024-07-19 20:23:00 [scheduling-1] INFO  p6spy - #1721388180008 | took 0ms | rollback | connection 649| url jdbc:h2:mem:test

;
2024-07-19 20:24:00 [scheduling-1] INFO  p6spy - #1721388240015 | took 0ms | rollback | connection 651| url jdbc:h2:mem:test

;
2024-07-19 20:25:00 [scheduling-1] INFO  p6spy - #1721388300014 | took 0ms | rollback | connection 653| url jdbc:h2:mem:test

;
2024-07-19 20:26:00 [scheduling-1] INFO  p6spy - #1721388360022 | took 0ms | rollback | connection 657| url jdbc:h2:mem:test

;
2024-07-19 20:27:00 [scheduling-1] INFO  p6spy - #1721388420018 | took 0ms | rollback | connection 660| url jdbc:h2:mem:test

;
2024-07-19 20:28:00 [scheduling-1] INFO  p6spy - #1721388480010 | took 0ms | rollback | connection 662| url jdbc:h2:mem:test

;
2024-07-19 20:29:00 [scheduling-1] INFO  p6spy - #1721388540008 | took 0ms | rollback | connection 665| url jdbc:h2:mem:test

;
2024-07-19 20:30:00 [scheduling-1] INFO  p6spy - #1721388600016 | took 0ms | rollback | connection 670| url jdbc:h2:mem:test

;
2024-07-19 20:31:00 [scheduling-1] INFO  p6spy - #1721388660019 | took 0ms | rollback | connection 671| url jdbc:h2:mem:test

;
2024-07-19 20:32:00 [scheduling-1] INFO  p6spy - #1721388720013 | took 0ms | rollback | connection 676| url jdbc:h2:mem:test

;
2024-07-19 20:33:00 [scheduling-1] INFO  p6spy - #1721388780023 | took 0ms | rollback | connection 679| url jdbc:h2:mem:test

;
2024-07-19 20:34:00 [scheduling-1] INFO  p6spy - #1721388840017 | took 0ms | rollback | connection 682| url jdbc:h2:mem:test

;
2024-07-19 20:35:00 [scheduling-1] INFO  p6spy - #1721388900012 | took 0ms | rollback | connection 683| url jdbc:h2:mem:test

;
2024-07-19 20:36:00 [scheduling-1] INFO  p6spy - #1721388960011 | took 0ms | rollback | connection 686| url jdbc:h2:mem:test

;
2024-07-19 20:37:00 [scheduling-1] INFO  p6spy - #1721389020014 | took 0ms | rollback | connection 691| url jdbc:h2:mem:test

;
2024-07-19 20:38:00 [scheduling-1] INFO  p6spy - #1721389080018 | took 0ms | rollback | connection 694| url jdbc:h2:mem:test

;
2024-07-19 20:39:00 [scheduling-1] INFO  p6spy - #1721389140014 | took 0ms | rollback | connection 697| url jdbc:h2:mem:test

;
2024-07-19 20:40:00 [scheduling-1] INFO  p6spy - #1721389200021 | took 0ms | rollback | connection 700| url jdbc:h2:mem:test

;
2024-07-19 20:41:00 [scheduling-1] INFO  p6spy - #1721389260011 | took 0ms | rollback | connection 701| url jdbc:h2:mem:test

;
2024-07-19 20:42:00 [scheduling-1] INFO  p6spy - #1721389320009 | took 0ms | rollback | connection 705| url jdbc:h2:mem:test

;
2024-07-19 20:43:00 [scheduling-1] INFO  p6spy - #1721389380013 | took 0ms | rollback | connection 709| url jdbc:h2:mem:test

;
2024-07-19 20:44:00 [scheduling-1] INFO  p6spy - #1721389440011 | took 0ms | rollback | connection 712| url jdbc:h2:mem:test

;
2024-07-19 20:45:00 [scheduling-1] INFO  p6spy - #1721389500016 | took 0ms | rollback | connection 714| url jdbc:h2:mem:test

;
2024-07-19 20:46:00 [scheduling-1] INFO  p6spy - #1721389560010 | took 0ms | rollback | connection 717| url jdbc:h2:mem:test

;
2024-07-19 20:47:00 [scheduling-1] INFO  p6spy - #1721389620018 | took 0ms | rollback | connection 721| url jdbc:h2:mem:test

;
2024-07-19 20:48:00 [scheduling-1] INFO  p6spy - #1721389680016 | took 0ms | rollback | connection 722| url jdbc:h2:mem:test

;
2024-07-19 20:49:00 [scheduling-1] INFO  p6spy - #1721389740018 | took 0ms | rollback | connection 727| url jdbc:h2:mem:test

;
2024-07-19 20:50:00 [scheduling-1] INFO  p6spy - #1721389800017 | took 0ms | rollback | connection 728| url jdbc:h2:mem:test

;
2024-07-19 20:51:00 [scheduling-1] INFO  p6spy - #1721389860017 | took 0ms | rollback | connection 732| url jdbc:h2:mem:test

;
2024-07-19 20:52:00 [scheduling-1] INFO  p6spy - #1721389920011 | took 0ms | rollback | connection 734| url jdbc:h2:mem:test

;
2024-07-19 20:53:00 [scheduling-1] INFO  p6spy - #1721389980015 | took 0ms | rollback | connection 738| url jdbc:h2:mem:test

;
2024-07-19 20:54:00 [scheduling-1] INFO  p6spy - #1721390040016 | took 0ms | rollback | connection 740| url jdbc:h2:mem:test

;
2024-07-19 20:55:00 [scheduling-1] INFO  p6spy - #1721390100018 | took 0ms | rollback | connection 744| url jdbc:h2:mem:test

;
2024-07-19 20:56:00 [scheduling-1] INFO  p6spy - #1721390160010 | took 0ms | rollback | connection 746| url jdbc:h2:mem:test

;
2024-07-19 20:57:00 [scheduling-1] INFO  p6spy - #1721390220013 | took 0ms | rollback | connection 750| url jdbc:h2:mem:test

;
2024-07-19 20:57:59 [scheduling-1] INFO  p6spy - #1721390279992 | took 0ms | rollback | connection 752| url jdbc:h2:mem:test

;
2024-07-19 20:58:59 [scheduling-1] INFO  p6spy - #1721390339990 | took 0ms | rollback | connection 755| url jdbc:h2:mem:test

;
2024-07-19 21:00:00 [scheduling-1] INFO  p6spy - #1721390400005 | took 0ms | rollback | connection 760| url jdbc:h2:mem:test

;
2024-07-19 21:01:00 [scheduling-1] INFO  p6spy - #1721390460012 | took 0ms | rollback | connection 762| url jdbc:h2:mem:test

;
2024-07-19 21:02:00 [scheduling-1] INFO  p6spy - #1721390520006 | took 0ms | rollback | connection 766| url jdbc:h2:mem:test

;
2024-07-19 21:03:00 [scheduling-1] INFO  p6spy - #1721390580008 | took 0ms | rollback | connection 768| url jdbc:h2:mem:test

;
2024-07-19 21:04:00 [scheduling-1] INFO  p6spy - #1721390640003 | took 0ms | rollback | connection 771| url jdbc:h2:mem:test

;
2024-07-19 21:05:00 [scheduling-1] INFO  p6spy - #1721390700005 | took 0ms | rollback | connection 774| url jdbc:h2:mem:test

;
2024-07-19 21:06:00 [scheduling-1] INFO  p6spy - #1721390760007 | took 0ms | rollback | connection 778| url jdbc:h2:mem:test

;
2024-07-19 21:07:00 [scheduling-1] INFO  p6spy - #1721390820006 | took 0ms | rollback | connection 781| url jdbc:h2:mem:test

;
2024-07-19 21:08:00 [scheduling-1] INFO  p6spy - #1721390880007 | took 0ms | rollback | connection 784| url jdbc:h2:mem:test

;
2024-07-19 21:09:00 [scheduling-1] INFO  p6spy - #1721390940003 | took 0ms | rollback | connection 785| url jdbc:h2:mem:test

;
2024-07-19 21:10:00 [scheduling-1] INFO  p6spy - #1721391000012 | took 0ms | rollback | connection 790| url jdbc:h2:mem:test

;
2024-07-19 21:11:00 [scheduling-1] INFO  p6spy - #1721391060012 | took 0ms | rollback | connection 793| url jdbc:h2:mem:test

;
2024-07-19 21:12:00 [scheduling-1] INFO  p6spy - #1721391120011 | took 0ms | rollback | connection 795| url jdbc:h2:mem:test

;
2024-07-19 21:13:00 [scheduling-1] INFO  p6spy - #1721391180002 | took 0ms | rollback | connection 797| url jdbc:h2:mem:test

;
2024-07-19 21:14:00 [scheduling-1] INFO  p6spy - #1721391240013 | took 0ms | rollback | connection 802| url jdbc:h2:mem:test

;
2024-07-19 21:15:00 [scheduling-1] INFO  p6spy - #1721391300009 | took 0ms | rollback | connection 804| url jdbc:h2:mem:test

;
2024-07-19 21:16:00 [scheduling-1] INFO  p6spy - #1721391360007 | took 0ms | rollback | connection 806| url jdbc:h2:mem:test

;
2024-07-19 21:17:00 [scheduling-1] INFO  p6spy - #1721391420014 | took 0ms | rollback | connection 811| url jdbc:h2:mem:test

;
2024-07-19 21:18:00 [scheduling-1] INFO  p6spy - #1721391480018 | took 0ms | rollback | connection 814| url jdbc:h2:mem:test

;
2024-07-19 21:19:00 [scheduling-1] INFO  p6spy - #1721391540006 | took 0ms | rollback | connection 816| url jdbc:h2:mem:test

;
2024-07-19 21:20:00 [scheduling-1] INFO  p6spy - #1721391600007 | took 0ms | rollback | connection 819| url jdbc:h2:mem:test

;
2024-07-19 21:21:00 [scheduling-1] INFO  p6spy - #1721391660005 | took 0ms | rollback | connection 822| url jdbc:h2:mem:test

;
2024-07-19 21:22:00 [scheduling-1] INFO  p6spy - #1721391720003 | took 0ms | rollback | connection 824| url jdbc:h2:mem:test

;
2024-07-19 21:23:00 [scheduling-1] INFO  p6spy - #1721391780008 | took 0ms | rollback | connection 829| url jdbc:h2:mem:test

;
2024-07-19 21:24:00 [scheduling-1] INFO  p6spy - #1721391840010 | took 0ms | rollback | connection 830| url jdbc:h2:mem:test

;
2024-07-19 21:25:00 [scheduling-1] INFO  p6spy - #1721391900005 | took 0ms | rollback | connection 834| url jdbc:h2:mem:test

;
2024-07-19 21:26:00 [scheduling-1] INFO  p6spy - #1721391960004 | took 0ms | rollback | connection 836| url jdbc:h2:mem:test

;
2024-07-19 21:27:00 [scheduling-1] INFO  p6spy - #1721392020007 | took 0ms | rollback | connection 841| url jdbc:h2:mem:test

;
2024-07-19 21:28:00 [scheduling-1] INFO  p6spy - #1721392080005 | took 0ms | rollback | connection 843| url jdbc:h2:mem:test

;
2024-07-19 21:29:00 [scheduling-1] INFO  p6spy - #1721392140006 | took 0ms | rollback | connection 846| url jdbc:h2:mem:test

;
2024-07-19 21:30:00 [scheduling-1] INFO  p6spy - #1721392200007 | took 0ms | rollback | connection 849| url jdbc:h2:mem:test

;
2024-07-19 21:31:00 [scheduling-1] INFO  p6spy - #1721392260005 | took 0ms | rollback | connection 852| url jdbc:h2:mem:test

;
2024-07-19 21:32:00 [scheduling-1] INFO  p6spy - #1721392320006 | took 0ms | rollback | connection 855| url jdbc:h2:mem:test

;
2024-07-19 21:33:00 [scheduling-1] INFO  p6spy - #1721392380008 | took 0ms | rollback | connection 859| url jdbc:h2:mem:test

;
2024-07-19 21:34:00 [scheduling-1] INFO  p6spy - #1721392440001 | took 0ms | rollback | connection 860| url jdbc:h2:mem:test

;
2024-07-19 21:35:00 [scheduling-1] INFO  p6spy - #1721392500005 | took 0ms | rollback | connection 864| url jdbc:h2:mem:test

;
2024-07-19 21:36:00 [scheduling-1] INFO  p6spy - #1721392560011 | took 0ms | rollback | connection 867| url jdbc:h2:mem:test

;
2024-07-19 21:37:00 [scheduling-1] INFO  p6spy - #1721392620034 | took 0ms | rollback | connection 870| url jdbc:h2:mem:test

;
2024-07-19 21:38:00 [scheduling-1] INFO  p6spy - #1721392680012 | took 0ms | rollback | connection 872| url jdbc:h2:mem:test

;
2024-07-19 21:39:00 [scheduling-1] INFO  p6spy - #1721392740009 | took 0ms | rollback | connection 876| url jdbc:h2:mem:test

;
2024-07-19 21:40:00 [scheduling-1] INFO  p6spy - #1721392800012 | took 0ms | rollback | connection 879| url jdbc:h2:mem:test

;
2024-07-19 21:41:00 [scheduling-1] INFO  p6spy - #1721392860013 | took 0ms | rollback | connection 881| url jdbc:h2:mem:test

;
2024-07-19 21:42:00 [scheduling-1] INFO  p6spy - #1721392920014 | took 0ms | rollback | connection 886| url jdbc:h2:mem:test

;
2024-07-19 21:43:00 [scheduling-1] INFO  p6spy - #1721392980005 | took 0ms | rollback | connection 887| url jdbc:h2:mem:test

;
2024-07-19 21:44:00 [scheduling-1] INFO  p6spy - #1721393040012 | took 0ms | rollback | connection 892| url jdbc:h2:mem:test

;
2024-07-19 21:45:00 [scheduling-1] INFO  p6spy - #1721393100012 | took 0ms | rollback | connection 894| url jdbc:h2:mem:test

;
2024-07-19 21:46:00 [scheduling-1] INFO  p6spy - #1721393160006 | took 0ms | rollback | connection 897| url jdbc:h2:mem:test

;
2024-07-19 21:47:00 [scheduling-1] INFO  p6spy - #1721393220007 | took 0ms | rollback | connection 901| url jdbc:h2:mem:test

;
2024-07-19 21:48:00 [scheduling-1] INFO  p6spy - #1721393280006 | took 0ms | rollback | connection 903| url jdbc:h2:mem:test

;
2024-07-19 21:49:00 [scheduling-1] INFO  p6spy - #1721393340010 | took 0ms | rollback | connection 905| url jdbc:h2:mem:test

;
2024-07-19 21:50:00 [scheduling-1] INFO  p6spy - #1721393400012 | took 0ms | rollback | connection 910| url jdbc:h2:mem:test

;
2024-07-19 21:51:00 [scheduling-1] INFO  p6spy - #1721393460013 | took 0ms | rollback | connection 912| url jdbc:h2:mem:test

;
2024-07-19 21:52:00 [scheduling-1] INFO  p6spy - #1721393520009 | took 0ms | rollback | connection 915| url jdbc:h2:mem:test

;
2024-07-19 21:53:00 [scheduling-1] INFO  p6spy - #1721393580008 | took 0ms | rollback | connection 918| url jdbc:h2:mem:test

;
2024-07-19 21:54:00 [scheduling-1] INFO  p6spy - #1721393640011 | took 0ms | rollback | connection 921| url jdbc:h2:mem:test

;
2024-07-19 21:55:00 [scheduling-1] INFO  p6spy - #1721393700013 | took 0ms | rollback | connection 925| url jdbc:h2:mem:test

;
2024-07-19 21:56:00 [scheduling-1] INFO  p6spy - #1721393760007 | took 0ms | rollback | connection 927| url jdbc:h2:mem:test

;
2024-07-19 21:57:00 [scheduling-1] INFO  p6spy - #1721393820017 | took 0ms | rollback | connection 930| url jdbc:h2:mem:test

;
2024-07-19 21:58:00 [scheduling-1] INFO  p6spy - #1721393880007 | took 0ms | rollback | connection 933| url jdbc:h2:mem:test

;
2024-07-19 21:59:00 [scheduling-1] INFO  p6spy - #1721393940009 | took 0ms | rollback | connection 936| url jdbc:h2:mem:test

;
2024-07-19 22:00:00 [scheduling-1] INFO  p6spy - #1721394000011 | took 0ms | rollback | connection 939| url jdbc:h2:mem:test

;
2024-07-19 22:01:00 [scheduling-1] INFO  p6spy - #1721394060014 | took 0ms | rollback | connection 942| url jdbc:h2:mem:test

;
2024-07-19 22:02:00 [scheduling-1] INFO  p6spy - #1721394120007 | took 0ms | rollback | connection 946| url jdbc:h2:mem:test

;
2024-07-19 22:03:00 [scheduling-1] INFO  p6spy - #1721394180005 | took 0ms | rollback | connection 949| url jdbc:h2:mem:test

;
2024-07-19 22:04:00 [scheduling-1] INFO  p6spy - #1721394240016 | took 0ms | rollback | connection 950| url jdbc:h2:mem:test

;
2024-07-19 22:05:00 [scheduling-1] INFO  p6spy - #1721394300015 | took 0ms | rollback | connection 955| url jdbc:h2:mem:test

;
2024-07-19 22:06:00 [scheduling-1] INFO  p6spy - #1721394360013 | took 0ms | rollback | connection 956| url jdbc:h2:mem:test

;
2024-07-19 22:07:00 [scheduling-1] INFO  p6spy - #1721394420009 | took 0ms | rollback | connection 961| url jdbc:h2:mem:test

;
2024-07-19 22:08:00 [scheduling-1] INFO  p6spy - #1721394480007 | took 0ms | rollback | connection 963| url jdbc:h2:mem:test

;
2024-07-19 22:09:00 [scheduling-1] INFO  p6spy - #1721394540005 | took 0ms | rollback | connection 966| url jdbc:h2:mem:test

;
2024-07-19 22:10:00 [scheduling-1] INFO  p6spy - #1721394600005 | took 0ms | rollback | connection 968| url jdbc:h2:mem:test

;
2024-07-19 22:11:00 [scheduling-1] INFO  p6spy - #1721394660005 | took 0ms | rollback | connection 973| url jdbc:h2:mem:test

;
2024-07-19 22:12:00 [scheduling-1] INFO  p6spy - #1721394720004 | took 0ms | rollback | connection 974| url jdbc:h2:mem:test

;
2024-07-19 22:13:00 [scheduling-1] INFO  p6spy - #1721394780005 | took 0ms | rollback | connection 978| url jdbc:h2:mem:test

;
2024-07-19 22:14:00 [scheduling-1] INFO  p6spy - #1721394840003 | took 0ms | rollback | connection 981| url jdbc:h2:mem:test

;
2024-07-19 22:15:00 [scheduling-1] INFO  p6spy - #1721394900005 | took 0ms | rollback | connection 984| url jdbc:h2:mem:test

;
2024-07-19 22:16:00 [scheduling-1] INFO  p6spy - #1721394960007 | took 0ms | rollback | connection 987| url jdbc:h2:mem:test

;
2024-07-19 22:17:00 [scheduling-1] INFO  p6spy - #1721395020002 | took 0ms | rollback | connection 989| url jdbc:h2:mem:test

;
2024-07-19 22:18:00 [scheduling-1] INFO  p6spy - #1721395080011 | took 0ms | rollback | connection 994| url jdbc:h2:mem:test

;
2024-07-19 22:19:00 [scheduling-1] INFO  p6spy - #1721395140001 | took 0ms | rollback | connection 995| url jdbc:h2:mem:test

;
2024-07-19 22:20:00 [scheduling-1] INFO  p6spy - #1721395200009 | took 0ms | rollback | connection 1000| url jdbc:h2:mem:test

;
2024-07-19 22:21:00 [scheduling-1] INFO  p6spy - #1721395260008 | took 0ms | rollback | connection 1002| url jdbc:h2:mem:test

;
2024-07-19 22:22:00 [scheduling-1] INFO  p6spy - #1721395320005 | took 0ms | rollback | connection 1005| url jdbc:h2:mem:test

;
2024-07-19 22:23:00 [scheduling-1] INFO  p6spy - #1721395380009 | took 0ms | rollback | connection 1008| url jdbc:h2:mem:test

;
2024-07-19 22:24:00 [scheduling-1] INFO  p6spy - #1721395440005 | took 0ms | rollback | connection 1012| url jdbc:h2:mem:test

;
2024-07-19 22:25:00 [scheduling-1] INFO  p6spy - #1721395500006 | took 0ms | rollback | connection 1015| url jdbc:h2:mem:test

;
2024-07-19 22:26:00 [scheduling-1] INFO  p6spy - #1721395560006 | took 0ms | rollback | connection 1017| url jdbc:h2:mem:test

;
2024-07-19 22:27:00 [scheduling-1] INFO  p6spy - #1721395620002 | took 0ms | rollback | connection 1019| url jdbc:h2:mem:test

;
2024-07-19 22:28:00 [scheduling-1] INFO  p6spy - #1721395680012 | took 0ms | rollback | connection 1024| url jdbc:h2:mem:test

;
2024-07-19 22:29:00 [scheduling-1] INFO  p6spy - #1721395740009 | took 0ms | rollback | connection 1027| url jdbc:h2:mem:test

;
2024-07-19 22:30:00 [scheduling-1] INFO  p6spy - #1721395800007 | took 0ms | rollback | connection 1030| url jdbc:h2:mem:test

;
2024-07-19 22:31:00 [scheduling-1] INFO  p6spy - #1721395860014 | took 0ms | rollback | connection 1033| url jdbc:h2:mem:test

;
2024-07-19 22:32:00 [scheduling-1] INFO  p6spy - #1721395920005 | took 0ms | rollback | connection 1036| url jdbc:h2:mem:test

;
2024-07-19 22:33:00 [scheduling-1] INFO  p6spy - #1721395980003 | took 0ms | rollback | connection 1037| url jdbc:h2:mem:test

;
2024-07-19 22:34:00 [scheduling-1] INFO  p6spy - #1721396040007 | took 0ms | rollback | connection 1042| url jdbc:h2:mem:test

;
2024-07-19 22:35:00 [scheduling-1] INFO  p6spy - #1721396100002 | took 0ms | rollback | connection 1043| url jdbc:h2:mem:test

;
2024-07-19 22:36:00 [scheduling-1] INFO  p6spy - #1721396160014 | took 0ms | rollback | connection 1047| url jdbc:h2:mem:test

;
2024-07-19 22:37:00 [scheduling-1] INFO  p6spy - #1721396220003 | took 0ms | rollback | connection 1049| url jdbc:h2:mem:test

;
2024-07-19 22:38:00 [scheduling-1] INFO  p6spy - #1721396280008 | took 0ms | rollback | connection 1054| url jdbc:h2:mem:test

;
2024-07-19 22:39:00 [scheduling-1] INFO  p6spy - #1721396340006 | took 0ms | rollback | connection 1056| url jdbc:h2:mem:test

;
2024-07-19 22:40:00 [scheduling-1] INFO  p6spy - #1721396400010 | took 0ms | rollback | connection 1060| url jdbc:h2:mem:test

;
2024-07-19 22:41:00 [scheduling-1] INFO  p6spy - #1721396460007 | took 0ms | rollback | connection 1062| url jdbc:h2:mem:test

;
2024-07-19 22:42:00 [scheduling-1] INFO  p6spy - #1721396520012 | took 0ms | rollback | connection 1066| url jdbc:h2:mem:test

;
2024-07-19 22:43:00 [scheduling-1] INFO  p6spy - #1721396580005 | took 0ms | rollback | connection 1067| url jdbc:h2:mem:test

;
2024-07-19 22:44:00 [scheduling-1] INFO  p6spy - #1721396640006 | took 0ms | rollback | connection 1071| url jdbc:h2:mem:test

;
2024-07-19 22:45:00 [scheduling-1] INFO  p6spy - #1721396700009 | took 0ms | rollback | connection 1075| url jdbc:h2:mem:test

;
2024-07-19 22:46:00 [scheduling-1] INFO  p6spy - #1721396760010 | took 0ms | rollback | connection 1078| url jdbc:h2:mem:test

;
2024-07-19 22:47:00 [scheduling-1] INFO  p6spy - #1721396820007 | took 0ms | rollback | connection 1080| url jdbc:h2:mem:test

;
2024-07-19 22:48:00 [scheduling-1] INFO  p6spy - #1721396880002 | took 0ms | rollback | connection 1082| url jdbc:h2:mem:test

;
2024-07-19 22:49:00 [scheduling-1] INFO  p6spy - #1721396940004 | took 0ms | rollback | connection 1086| url jdbc:h2:mem:test

;
2024-07-19 22:50:00 [scheduling-1] INFO  p6spy - #1721397000005 | took 0ms | rollback | connection 1088| url jdbc:h2:mem:test

;
2024-07-19 22:51:00 [scheduling-1] INFO  p6spy - #1721397060008 | took 0ms | rollback | connection 1093| url jdbc:h2:mem:test

;
2024-07-19 22:52:00 [scheduling-1] INFO  p6spy - #1721397120003 | took 0ms | rollback | connection 1095| url jdbc:h2:mem:test

;
2024-07-19 22:53:00 [scheduling-1] INFO  p6spy - #1721397180002 | took 0ms | rollback | connection 1097| url jdbc:h2:mem:test

;
2024-07-19 22:54:00 [scheduling-1] INFO  p6spy - #1721397240008 | took 0ms | rollback | connection 1102| url jdbc:h2:mem:test

;
2024-07-19 22:55:00 [scheduling-1] INFO  p6spy - #1721397300004 | took 0ms | rollback | connection 1104| url jdbc:h2:mem:test

;
2024-07-19 22:56:00 [scheduling-1] INFO  p6spy - #1721397360005 | took 0ms | rollback | connection 1107| url jdbc:h2:mem:test

;
2024-07-19 22:57:00 [scheduling-1] INFO  p6spy - #1721397420008 | took 0ms | rollback | connection 1110| url jdbc:h2:mem:test

;
2024-07-19 22:58:00 [scheduling-1] INFO  p6spy - #1721397480003 | took 0ms | rollback | connection 1113| url jdbc:h2:mem:test

;
2024-07-19 22:59:00 [scheduling-1] INFO  p6spy - #1721397540003 | took 0ms | rollback | connection 1115| url jdbc:h2:mem:test

;
2024-07-19 23:00:00 [scheduling-1] INFO  p6spy - #1721397600012 | took 0ms | rollback | connection 1120| url jdbc:h2:mem:test

;
2024-07-19 23:01:00 [scheduling-1] INFO  p6spy - #1721397660004 | took 0ms | rollback | connection 1121| url jdbc:h2:mem:test

;
2024-07-19 23:02:00 [scheduling-1] INFO  p6spy - #1721397720005 | took 0ms | rollback | connection 1126| url jdbc:h2:mem:test

;
2024-07-19 23:03:00 [scheduling-1] INFO  p6spy - #1721397780005 | took 0ms | rollback | connection 1127| url jdbc:h2:mem:test

;
2024-07-19 23:04:00 [scheduling-1] INFO  p6spy - #1721397840008 | took 0ms | rollback | connection 1132| url jdbc:h2:mem:test

;
2024-07-19 23:05:00 [scheduling-1] INFO  p6spy - #1721397900005 | took 0ms | rollback | connection 1134| url jdbc:h2:mem:test

;
2024-07-19 23:06:00 [scheduling-1] INFO  p6spy - #1721397960005 | took 0ms | rollback | connection 1137| url jdbc:h2:mem:test

;
2024-07-19 23:07:00 [scheduling-1] INFO  p6spy - #1721398020001 | took 0ms | rollback | connection 1139| url jdbc:h2:mem:test

;
2024-07-19 23:08:00 [scheduling-1] INFO  p6spy - #1721398080007 | took 0ms | rollback | connection 1144| url jdbc:h2:mem:test

;
2024-07-19 23:09:00 [scheduling-1] INFO  p6spy - #1721398140005 | took 0ms | rollback | connection 1145| url jdbc:h2:mem:test

;
2024-07-19 23:10:00 [scheduling-1] INFO  p6spy - #1721398200003 | took 0ms | rollback | connection 1149| url jdbc:h2:mem:test

;
2024-07-19 23:11:00 [scheduling-1] INFO  p6spy - #1721398260007 | took 0ms | rollback | connection 1153| url jdbc:h2:mem:test

;
2024-07-19 23:12:00 [scheduling-1] INFO  p6spy - #1721398320001 | took 0ms | rollback | connection 1154| url jdbc:h2:mem:test

;
2024-07-19 23:13:00 [scheduling-1] INFO  p6spy - #1721398380009 | took 0ms | rollback | connection 1159| url jdbc:h2:mem:test

;
2024-07-19 23:14:00 [scheduling-1] INFO  p6spy - #1721398440021 | took 0ms | rollback | connection 1162| url jdbc:h2:mem:test

;
2024-07-19 23:15:00 [scheduling-1] INFO  p6spy - #1721398500022 | took 0ms | rollback | connection 1163| url jdbc:h2:mem:test

;
2024-07-19 23:16:00 [scheduling-1] INFO  p6spy - #1721398560006 | took 0ms | rollback | connection 1168| url jdbc:h2:mem:test

;
2024-07-19 23:17:00 [scheduling-1] INFO  p6spy - #1721398620004 | took 0ms | rollback | connection 1170| url jdbc:h2:mem:test

;
2024-07-19 23:18:00 [scheduling-1] INFO  p6spy - #1721398680006 | took 0ms | rollback | connection 1174| url jdbc:h2:mem:test

;
2024-07-19 23:19:00 [scheduling-1] INFO  p6spy - #1721398740004 | took 0ms | rollback | connection 1176| url jdbc:h2:mem:test

;
2024-07-19 23:20:00 [scheduling-1] INFO  p6spy - #1721398800002 | took 0ms | rollback | connection 1178| url jdbc:h2:mem:test

;
2024-07-19 23:21:00 [scheduling-1] INFO  p6spy - #1721398860006 | took 0ms | rollback | connection 1183| url jdbc:h2:mem:test

;
2024-07-19 23:22:00 [scheduling-1] INFO  p6spy - #1721398920002 | took 0ms | rollback | connection 1184| url jdbc:h2:mem:test

;
2024-07-19 23:23:00 [scheduling-1] INFO  p6spy - #1721398980005 | took 0ms | rollback | connection 1189| url jdbc:h2:mem:test

;
2024-07-19 23:24:00 [scheduling-1] INFO  p6spy - #1721399040004 | took 0ms | rollback | connection 1190| url jdbc:h2:mem:test

;
2024-07-19 23:25:00 [scheduling-1] INFO  p6spy - #1721399100006 | took 0ms | rollback | connection 1195| url jdbc:h2:mem:test

;
2024-07-19 23:26:00 [scheduling-1] INFO  p6spy - #1721399160002 | took 0ms | rollback | connection 1196| url jdbc:h2:mem:test

;
2024-07-19 23:27:00 [scheduling-1] INFO  p6spy - #1721399220005 | took 0ms | rollback | connection 1201| url jdbc:h2:mem:test

;
2024-07-19 23:28:00 [scheduling-1] INFO  p6spy - #1721399280006 | took 0ms | rollback | connection 1203| url jdbc:h2:mem:test

;
2024-07-19 23:29:00 [scheduling-1] INFO  p6spy - #1721399340006 | took 0ms | rollback | connection 1207| url jdbc:h2:mem:test

;
2024-07-19 23:30:00 [scheduling-1] INFO  p6spy - #1721399400002 | took 0ms | rollback | connection 1208| url jdbc:h2:mem:test

;
2024-07-19 23:31:00 [scheduling-1] INFO  p6spy - #1721399460006 | took 0ms | rollback | connection 1213| url jdbc:h2:mem:test

;
2024-07-19 23:32:00 [scheduling-1] INFO  p6spy - #1721399520006 | took 0ms | rollback | connection 1215| url jdbc:h2:mem:test

;
2024-07-19 23:33:00 [scheduling-1] INFO  p6spy - #1721399580004 | took 0ms | rollback | connection 1218| url jdbc:h2:mem:test

;
2024-07-19 23:34:00 [scheduling-1] INFO  p6spy - #1721399640003 | took 0ms | rollback | connection 1220| url jdbc:h2:mem:test

;
2024-07-19 23:35:00 [scheduling-1] INFO  p6spy - #1721399700004 | took 0ms | rollback | connection 1224| url jdbc:h2:mem:test

;
2024-07-19 23:36:00 [scheduling-1] INFO  p6spy - #1721399760007 | took 0ms | rollback | connection 1227| url jdbc:h2:mem:test

;
2024-07-19 23:37:00 [scheduling-1] INFO  p6spy - #1721399820004 | took 0ms | rollback | connection 1230| url jdbc:h2:mem:test

;
2024-07-19 23:38:00 [scheduling-1] INFO  p6spy - #1721399880005 | took 0ms | rollback | connection 1233| url jdbc:h2:mem:test

;
2024-07-19 23:39:00 [scheduling-1] INFO  p6spy - #1721399940004 | took 0ms | rollback | connection 1236| url jdbc:h2:mem:test

;
2024-07-19 23:40:00 [scheduling-1] INFO  p6spy - #1721400000005 | took 0ms | rollback | connection 1239| url jdbc:h2:mem:test

;
2024-07-19 23:41:00 [scheduling-1] INFO  p6spy - #1721400060004 | took 0ms | rollback | connection 1242| url jdbc:h2:mem:test

;
2024-07-19 23:42:00 [scheduling-1] INFO  p6spy - #1721400120002 | took 0ms | rollback | connection 1244| url jdbc:h2:mem:test

;
2024-07-19 23:43:00 [scheduling-1] INFO  p6spy - #1721400180005 | took 0ms | rollback | connection 1249| url jdbc:h2:mem:test

;
2024-07-19 23:44:00 [scheduling-1] INFO  p6spy - #1721400240002 | took 0ms | rollback | connection 1250| url jdbc:h2:mem:test

;
2024-07-19 23:45:00 [scheduling-1] INFO  p6spy - #1721400300010 | took 0ms | rollback | connection 1254| url jdbc:h2:mem:test

;
2024-07-19 23:46:00 [scheduling-1] INFO  p6spy - #1721400360009 | took 0ms | rollback | connection 1256| url jdbc:h2:mem:test

;
2024-07-19 23:47:00 [scheduling-1] INFO  p6spy - #1721400420012 | took 0ms | rollback | connection 1261| url jdbc:h2:mem:test

;
2024-07-19 23:48:00 [scheduling-1] INFO  p6spy - #1721400480010 | took 0ms | rollback | connection 1262| url jdbc:h2:mem:test

;
2024-07-19 23:49:00 [scheduling-1] INFO  p6spy - #1721400540005 | took 0ms | rollback | connection 1267| url jdbc:h2:mem:test

;
